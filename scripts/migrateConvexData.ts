// scripts/migrateConvexData.ts
import { ConvexHttpClient } from "convex/browser";

const convex = new ConvexHttpClient(process.env.NEXT_PUBLIC_CONVEX_URL!);

async function migrateConvexData() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö Convex...');
  
  try {
    // ‚úÖ 1. –ü–†–û–í–ï–†–Ø–ï–ú –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ï
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Convex...');
    const allTrainers = await convex.query("trainers:getAllTrainers");
    console.log(`‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ. –ù–∞–π–¥–µ–Ω–æ —Ç—Ä–µ–Ω–µ—Ä–æ–≤: ${allTrainers.length}`);
    
    // ‚úÖ 2. –ó–ê–ü–£–°–ö–ê–ï–ú –ú–ò–ì–†–ê–¶–ò–Æ –†–ê–ë–û–ß–ò–• –ß–ê–°–û–í
    console.log('üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é —Ä–∞–±–æ—á–∏—Ö —á–∞—Å–æ–≤...');
    const migrationResult = await convex.mutation("trainers:migrateWorkingHours");
    console.log('‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞:', migrationResult);
    
    // ‚úÖ 3. –ü–†–û–í–ï–†–Ø–ï–ú –†–ï–ó–£–õ–¨–¢–ê–¢
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –º–∏–≥—Ä–∞—Ü–∏–∏...');
    const activeTrainers = await convex.query("trainers:getActiveTrainers");
    console.log(`‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö —Ç—Ä–µ–Ω–µ—Ä–æ–≤ –ø–æ—Å–ª–µ –º–∏–≥—Ä–∞—Ü–∏–∏: ${activeTrainers.length}`);
    
    // ‚úÖ 4. –ü–û–ö–ê–ó–´–í–ê–ï–ú –°–¢–ê–¢–ò–°–¢–ò–ö–£
    const stats = await convex.query("trainers:getStats");
    console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç—Ä–µ–Ω–µ—Ä–æ–≤:', stats);
    
    console.log('üéâ –ú–∏–≥—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    return true;
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
    return false;
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  migrateConvexData();
}

export default migrateConvexData;
