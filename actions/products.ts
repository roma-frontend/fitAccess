// app/actions/products.ts
"use server";

import { revalidatePath, revalidateTag } from 'next/cache';
import { ConvexHttpClient } from "convex/browser";

const convex = new ConvexHttpClient(process.env.NEXT_PUBLIC_CONVEX_URL!);

export async function restoreProduct(id: string) {
  try {
    console.log("üîÑ Server Action: –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞:", id);

    const result = await convex.mutation("products:restore", { id });

    // –û–±–Ω–æ–≤–ª—è–µ–º –∫—ç—à –¥–ª—è –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü —Å –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏
    revalidatePath('/admin/products');
    revalidateTag('products');
    revalidateTag('deleted-products');

    console.log("‚úÖ Server Action: –ü—Ä–æ–¥—É–∫—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω");
    return { success: true, data: result };
  } catch (error) {
    console.error("‚ùå Server Action: –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:", error);
    return { 
      success: false, 
      error: error instanceof Error ? error.message : '–û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è' 
    };
  }
}

export async function deleteProductAction(id: string, deleteType: 'soft' | 'hard' = 'soft') {
  try {
    console.log(`üîÑ Server Action: ${deleteType} —É–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞:`, id);

    if (deleteType === 'hard') {
      await convex.mutation("products:hardDelete", { id });
    } else {
      await convex.mutation("products:softDelete", { id });
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –∫—ç—à
    revalidatePath('/admin/products');
    revalidateTag('products');
    revalidateTag('deleted-products');

    console.log("‚úÖ Server Action: –ü—Ä–æ–¥—É–∫—Ç —É–¥–∞–ª–µ–Ω");
    return { success: true };
  } catch (error) {
    console.error("‚ùå Server Action: –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è:", error);
    return { 
      success: false, 
      error: error instanceof Error ? error.message : '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è' 
    };
  }
}
