"use client";

import React, { memo, useEffect } from 'react';
import { useProductsStore } from '@/stores/productsStore';
import { useShopProductsAPI } from '@/hooks/useShopProductsAPI';

interface ConvexProductsProviderProps {
  children: React.ReactNode;
}

const ConvexProductsProvider = memo(({ children }: ConvexProductsProviderProps) => {
  const { products, isLoading, error, refetch } = useShopProductsAPI();
  
  // –ü–æ–ª—É—á–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ store —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ç–∏–ø–∏–∑–∞—Ü–∏–µ–π
  const setProducts = useProductsStore((state) => state.setProducts);
  const setLoading = useProductsStore((state) => state.setLoading);
  const setError = useProductsStore((state) => state.setError);

  useEffect(() => {
    console.log('üîÑ ConvexProductsProvider: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è', {
      isLoading,
      error,
      productsCount: products?.length || 0,
      hasProducts: products && products.length > 0
    });

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ store
    setLoading(isLoading);
    setError(error);
    
    if (products) {
      setProducts(products);
      
      // –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –µ—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ã
      if (products.length > 0) {
        setTimeout(() => {
          useProductsStore.getState().filterProducts();
        }, 0);
      }
    }
  }, [products, isLoading, error, setProducts, setLoading, setError]);

  // –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ –≤ –≥–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  useEffect(() => {
    if (typeof window !== 'undefined') {
      (window as any).refetchProducts = refetch;
      console.log('üîß ConvexProductsProvider: –î–æ–±–∞–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è window.refetchProducts() –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏');
    }
  }, [refetch]);

  return <>{children}</>;
});

ConvexProductsProvider.displayName = 'ConvexProductsProvider';

export default ConvexProductsProvider;
