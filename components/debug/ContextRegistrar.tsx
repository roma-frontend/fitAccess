// components/debug/ContextRegistrar.tsx (—É–ª—É—á—à–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
"use client";

import { useEffect } from 'react';
import { useSchedule } from '@/contexts/ScheduleContext';
import { useDashboard } from '@/contexts/DashboardContext';
import { useSuperAdmin } from '@/contexts/SuperAdminContext';

export default function ContextRegistrar() {
  const schedule = useSchedule();
  const dashboard = useDashboard();
  const superAdmin = useSuperAdmin();

  useEffect(() => {
    console.log('üîß ContextRegistrar: –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–≤');
    
    if (typeof window !== 'undefined') {
      // ‚úÖ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ò–†–£–ï–ú FITACCESSDEBUG –ï–°–õ–ò –ï–ì–û –ù–ï–¢
      if (!window.fitAccessDebug) {
        window.fitAccessDebug = {} as any;
        console.log('‚úÖ fitAccessDebug –æ–±—ä–µ–∫—Ç —Å–æ–∑–¥–∞–Ω');
      }
      
      // ‚úÖ –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û –†–ï–ì–ò–°–¢–†–ò–†–£–ï–ú SCHEDULE
      if (schedule && !window.fitAccessDebug.schedule) {
        window.fitAccessDebug.schedule = {
          events: schedule.events,
          trainers: schedule.trainers,
          loading: schedule.loading,
          error: schedule.error,
          createEvent: schedule.createEvent,
          updateEvent: schedule.updateEvent,
          deleteEvent: schedule.deleteEvent,
          updateEventStatus: schedule.updateEventStatus,
          getEventsByTrainer: schedule.getEventsByTrainer,
          getEventsInDateRange: schedule.getEventsInDateRange,
          searchEvents: schedule.searchEvents,
          refreshData: schedule.refreshData,
          subscribeToUpdates: schedule.subscribeToUpdates,
          getStats: () => ({
            totalEvents: schedule.events.length,
            activeEvents: schedule.events.filter(e => e.status !== 'cancelled').length,
            trainersCount: schedule.trainers.length
          }),
          clearAllEvents: () => {
            console.log('üßπ –û—á–∏—Å—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π —á–µ—Ä–µ–∑ ContextRegistrar');
          }
        };
        console.log('‚úÖ Schedule –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω');
        console.log(`üìä Schedule: ${schedule.events.length} —Å–æ–±—ã—Ç–∏–π, ${schedule.trainers.length} —Ç—Ä–µ–Ω–µ—Ä–æ–≤`);
      }
      
      // ‚úÖ –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û –†–ï–ì–ò–°–¢–†–ò–†–£–ï–ú DASHBOARD
      if (dashboard && !window.fitAccessDebug.dashboard) {
        window.fitAccessDebug.dashboard = {
          events: dashboard.events,
          trainers: dashboard.trainers,
          clients: dashboard.clients,
          stats: dashboard.stats,
          analytics: dashboard.analytics,
          loading: dashboard.loading,
          error: dashboard.error,
          syncAllData: dashboard.syncAllData,
          refreshStats: dashboard.refreshStats,
          addEvent: dashboard.addEvent,
          updateEvent: dashboard.updateEvent,
          removeEvent: dashboard.removeEvent,
          getStats: () => ({
            totalEvents: dashboard.events.length,
            totalTrainers: dashboard.trainers.length,
            totalClients: dashboard.clients.length
          })
        };
        console.log('‚úÖ Dashboard –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω');
        console.log(`üìä Dashboard: ${dashboard.events.length} —Å–æ–±—ã—Ç–∏–π, ${dashboard.trainers.length} —Ç—Ä–µ–Ω–µ—Ä–æ–≤, ${dashboard.clients.length} –∫–ª–∏–µ–Ω—Ç–æ–≤`);
      }
      
      // ‚úÖ –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û –†–ï–ì–ò–°–¢–†–ò–†–£–ï–ú SUPERADMIN
      if (superAdmin && !window.fitAccessDebug.superAdmin) {
        window.fitAccessDebug.superAdmin = {
          trainers: superAdmin.trainers,
          clients: superAdmin.clients,
          loading: superAdmin.loading,
          error: superAdmin.error,
          refreshData: superAdmin.refreshData,
          getStats: () => ({
            totalTrainers: superAdmin.trainers.length,
            totalClients: superAdmin.clients.length,
            loading: superAdmin.loading
          })
        };
        console.log('‚úÖ SuperAdmin –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω');
        console.log(`üìä SuperAdmin: ${superAdmin.trainers.length} —Ç—Ä–µ–Ω–µ—Ä–æ–≤, ${superAdmin.clients.length} –∫–ª–∏–µ–Ω—Ç–æ–≤`);
      }
      
      // ‚úÖ –õ–û–ì–ò–†–£–ï–ú –§–ò–ù–ê–õ–¨–ù–û–ï –°–û–°–¢–û–Ø–ù–ò–ï
      const finalState = {
        schedule: !!window.fitAccessDebug.schedule,
        dashboard: !!window.fitAccessDebug.dashboard,
        superAdmin: !!window.fitAccessDebug.superAdmin,
        scheduleEvents: window.fitAccessDebug.schedule?.events?.length || 0,
        dashboardEvents: window.fitAccessDebug.dashboard?.events?.length || 0,
        superAdminTrainers: window.fitAccessDebug.superAdmin?.trainers?.length || 0
      };
      
      console.log('üìä –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ fitAccessDebug:', finalState);
      
      // ‚úÖ –ü–†–û–í–ï–†–Ø–ï–ú –ß–¢–û –í–°–ï –ö–û–ù–¢–ï–ö–°–¢–´ –ó–ê–†–ï–ì–ò–°–¢–†–ò–†–û–í–ê–ù–´
      const allRegistered = finalState.schedule && finalState.dashboard && finalState.superAdmin;
      if (allRegistered) {
        console.log('üéâ –í—Å–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!');
        console.log('üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ: fitAccessDebug.help()');
      } else {
        console.warn('‚ö†Ô∏è –ù–µ –≤—Å–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã:', {
          missing: {
            schedule: !finalState.schedule,
            dashboard: !finalState.dashboard,
            superAdmin: !finalState.superAdmin
          }
        });
      }
    }
  }, [schedule, dashboard, superAdmin]);

  return null; // –ù–µ–≤–∏–¥–∏–º—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
}
