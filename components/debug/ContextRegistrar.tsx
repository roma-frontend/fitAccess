// components/debug/ContextRegistrar.tsx (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
"use client";

import { useEffect } from 'react';
import { useSchedule } from '@/contexts/ScheduleContext';
import { useDashboard } from '@/contexts/DashboardContext';
import { useSuperAdmin } from '@/contexts/SuperAdminContext';

export default function ContextRegistrar() {
  const schedule = useSchedule();
  const dashboard = useDashboard();
  const superAdmin = useSuperAdmin();

  useEffect(() => {
    console.log('üîß ContextRegistrar: –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–≤');
    
    if (typeof window !== 'undefined') {
      // ‚úÖ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ò–†–£–ï–ú FITACCESSDEBUG –ï–°–õ–ò –ï–ì–û –ù–ï–¢
      if (!window.fitAccessDebug) {
        window.fitAccessDebug = {} as any;
        console.log('‚úÖ fitAccessDebug –æ–±—ä–µ–∫—Ç —Å–æ–∑–¥–∞–Ω');
      }
      
      // ‚úÖ –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û –†–ï–ì–ò–°–¢–†–ò–†–£–ï–ú SCHEDULE
      if (schedule && !window.fitAccessDebug.schedule) {
        window.fitAccessDebug.schedule = {
          events: schedule.events,
          trainers: schedule.trainers,
          loading: schedule.loading,
          error: schedule.error,
          createEvent: schedule.createEvent,
          updateEvent: schedule.updateEvent,
          deleteEvent: schedule.deleteEvent,
          updateEventStatus: schedule.updateEventStatus,
          getEventsByTrainer: schedule.getEventsByTrainer,
          getEventsInDateRange: schedule.getEventsInDateRange,
          searchEvents: schedule.searchEvents,
          refreshData: schedule.refreshData,
          subscribeToUpdates: schedule.subscribeToUpdates,
          getStats: () => ({
            totalEvents: schedule.events.length,
            activeEvents: schedule.events.filter(e => e.status !== 'cancelled').length,
            trainersCount: schedule.trainers.length
          }),
          clearAllEvents: () => {
            console.log('üßπ –û—á–∏—Å—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π —á–µ—Ä–µ–∑ ContextRegistrar');
          }
        };
        console.log('‚úÖ Schedule –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω');
        console.log(`üìä Schedule: ${schedule.events.length} —Å–æ–±—ã—Ç–∏–π, ${schedule.trainers.length} —Ç—Ä–µ–Ω–µ—Ä–æ–≤`);
      }
      
      // ‚úÖ –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û –†–ï–ì–ò–°–¢–†–ò–†–£–ï–ú DASHBOARD (–ò–°–ü–†–ê–í–õ–ï–ù–û)
      if (dashboard && !window.fitAccessDebug.dashboard) {
        window.fitAccessDebug.dashboard = {
          // –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
          events: dashboard.events,
          trainers: dashboard.trainers,
          clients: dashboard.clients,
          notifications: dashboard.notifications, // ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û
          stats: dashboard.stats,
          analytics: dashboard.analytics,
          
          // –°–æ—Å—Ç–æ—è–Ω–∏–µ
          loading: dashboard.loading,
          error: dashboard.error,
          
          // –î–µ–π—Å—Ç–≤–∏—è (–∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã)
          syncAllData: dashboard.syncAllData,
          refreshStats: dashboard.refreshStats,
          markNotificationAsRead: dashboard.markNotificationAsRead, // ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–´–ô –ú–ï–¢–û–î
          clearAllNotifications: dashboard.clearAllNotifications, // ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–´–ô –ú–ï–¢–û–î
          subscribeToUpdates: dashboard.subscribeToUpdates,
          
          // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è debug
          getStats: () => ({
            totalEvents: dashboard.events.length,
            totalTrainers: dashboard.trainers.length,
            totalClients: dashboard.clients.length,
            totalNotifications: dashboard.notifications.length,
            unreadNotifications: dashboard.notifications.filter(n => !n.read).length,
            lastUpdate: new Date().toISOString()
          }),
          
          // –ú–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏
          getNotificationsSummary: () => ({
            total: dashboard.notifications.length,
            unread: dashboard.notifications.filter(n => !n.read).length,
            byPriority: {
              high: dashboard.notifications.filter(n => n.priority === 'high').length,
              medium: dashboard.notifications.filter(n => n.priority === 'medium').length,
              low: dashboard.notifications.filter(n => n.priority === 'low').length
            }
          }),
          
          // –ú–µ—Ç–æ–¥—ã –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
          getAnalyticsSummary: () => ({
            clientGrowthPoints: dashboard.analytics.clientGrowth.length,
            trainersTracked: dashboard.analytics.trainerPerformance.length,
            equipmentItems: dashboard.analytics.equipmentUsage.length,
            revenueStreams: dashboard.analytics.revenueByService.length
          })
        };
        
        console.log('‚úÖ Dashboard –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω');
        console.log(`üìä Dashboard: ${dashboard.events.length} —Å–æ–±—ã—Ç–∏–π, ${dashboard.trainers.length} —Ç—Ä–µ–Ω–µ—Ä–æ–≤, ${dashboard.clients.length} –∫–ª–∏–µ–Ω—Ç–æ–≤, ${dashboard.notifications.length} —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π`);
      }
      
      // ‚úÖ –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û –†–ï–ì–ò–°–¢–†–ò–†–£–ï–ú SUPERADMIN
      if (superAdmin && !window.fitAccessDebug.superAdmin) {
        window.fitAccessDebug.superAdmin = {
          trainers: superAdmin.trainers,
          clients: superAdmin.clients,
          loading: superAdmin.loading,
          error: superAdmin.error,
          refreshData: superAdmin.refreshData,
          getStats: () => ({
            totalTrainers: superAdmin.trainers.length,
            totalClients: superAdmin.clients.length,
            loading: superAdmin.loading
          })
        };
        console.log('‚úÖ SuperAdmin –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω');
        console.log(`üìä SuperAdmin: ${superAdmin.trainers.length} —Ç—Ä–µ–Ω–µ—Ä–æ–≤, ${superAdmin.clients.length} –∫–ª–∏–µ–Ω—Ç–æ–≤`);
      }
      
      // ‚úÖ –î–û–ë–ê–í–õ–Ø–ï–ú –ì–õ–û–ë–ê–õ–¨–ù–´–ï HELPER –§–£–ù–ö–¶–ò–ò
      if (!window.fitAccessDebug.help) {
        window.fitAccessDebug.help = () => {
          console.log(`
üîß FitAccess Debug System - –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:

üìä –û–ë–©–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:
‚Ä¢ fitAccessDebug.getOverview() - –æ–±—â–∏–π –æ–±–∑–æ—Ä —Å–∏—Å—Ç–µ–º—ã
‚Ä¢ fitAccessDebug.help() - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

üìÖ SCHEDULE –ö–û–ù–¢–ï–ö–°–¢:
‚Ä¢ fitAccessDebug.schedule.events - –≤—Å–µ —Å–æ–±—ã—Ç–∏—è
‚Ä¢ fitAccessDebug.schedule.trainers - –≤—Å–µ —Ç—Ä–µ–Ω–µ—Ä—ã
‚Ä¢ fitAccessDebug.schedule.getStats() - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–æ–±—ã—Ç–∏–π
‚Ä¢ fitAccessDebug.schedule.createEvent(data) - —Å–æ–∑–¥–∞—Ç—å —Å–æ–±—ã—Ç–∏–µ
‚Ä¢ fitAccessDebug.schedule.refreshData() - –æ–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ

üìà DASHBOARD –ö–û–ù–¢–ï–ö–°–¢:
‚Ä¢ fitAccessDebug.dashboard.stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–∞—à–±–æ—Ä–¥–∞
‚Ä¢ fitAccessDebug.dashboard.notifications - —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
‚Ä¢ fitAccessDebug.dashboard.analytics - –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
‚Ä¢ fitAccessDebug.dashboard.getStats() - –æ–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
‚Ä¢ fitAccessDebug.dashboard.getNotificationsSummary() - —Å–≤–æ–¥–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
‚Ä¢ fitAccessDebug.dashboard.syncAllData() - –ø–æ–ª–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è

üëë SUPERADMIN –ö–û–ù–¢–ï–ö–°–¢:
‚Ä¢ fitAccessDebug.superAdmin.trainers - –≤—Å–µ —Ç—Ä–µ–Ω–µ—Ä—ã
‚Ä¢ fitAccessDebug.superAdmin.clients - –≤—Å–µ –∫–ª–∏–µ–Ω—Ç—ã
‚Ä¢ fitAccessDebug.superAdmin.getStats() - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–¥–º–∏–Ω–∫–∏

üîÑ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø:
‚Ä¢ fitAccessDebug.syncAll() - —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç—ã
‚Ä¢ fitAccessDebug.clearAll() - –æ—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
          `);
        };
        
        window.fitAccessDebug.getOverview = () => {
          const overview = {
            schedule: {
              registered: !!window.fitAccessDebug.schedule,
              events: window.fitAccessDebug.schedule?.events?.length || 0,
              trainers: window.fitAccessDebug.schedule?.trainers?.length || 0,
              loading: window.fitAccessDebug.schedule?.loading || false
            },
            dashboard: {
              registered: !!window.fitAccessDebug.dashboard,
              events: window.fitAccessDebug.dashboard?.events?.length || 0,
              clients: window.fitAccessDebug.dashboard?.clients?.length || 0,
              notifications: window.fitAccessDebug.dashboard?.notifications?.length || 0,
              loading: window.fitAccessDebug.dashboard?.loading || false
            },
            superAdmin: {
              registered: !!window.fitAccessDebug.superAdmin,
              trainers: window.fitAccessDebug.superAdmin?.trainers?.length || 0,
              clients: window.fitAccessDebug.superAdmin?.clients?.length || 0,
              loading: window.fitAccessDebug.superAdmin?.loading || false
            },
            timestamp: new Date().toISOString()
          };
          
          console.table(overview);
          return overview;
        };
        
        window.fitAccessDebug.syncAll = async () => {
          console.log('üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–≤...');
          
          const promises = [];
          
          if (window.fitAccessDebug.schedule?.refreshData) {
            promises.push(window.fitAccessDebug.schedule.refreshData());
          }
          
          if (window.fitAccessDebug.dashboard?.syncAllData) {
            promises.push(window.fitAccessDebug.dashboard.syncAllData());
          }
          
          if (window.fitAccessDebug.superAdmin?.refreshData) {
            promises.push(window.fitAccessDebug.superAdmin.refreshData());
          }
          
          try {
            await Promise.all(promises);
            console.log('‚úÖ –í—Å–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
            return window.fitAccessDebug.getOverview();
          } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:', error);
            throw error;
          }
        };
        
        window.fitAccessDebug.clearAll = () => {
          console.log('üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö debug –¥–∞–Ω–Ω—ã—Ö...');
          
          if (window.fitAccessDebug.schedule?.clearAllEvents) {
            window.fitAccessDebug.schedule.clearAllEvents();
          }
          
          if (window.fitAccessDebug.dashboard?.clearAllNotifications) {
            window.fitAccessDebug.dashboard.clearAllNotifications();
          }
          
          console.log('‚úÖ –í—Å–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã');
        };
      }
      
      // ‚úÖ –õ–û–ì–ò–†–£–ï–ú –§–ò–ù–ê–õ–¨–ù–û–ï –°–û–°–¢–û–Ø–ù–ò–ï
      const finalState = {
        schedule: !!window.fitAccessDebug.schedule,
        dashboard: !!window.fitAccessDebug.dashboard,
        superAdmin: !!window.fitAccessDebug.superAdmin,
        scheduleEvents: window.fitAccessDebug.schedule?.events?.length || 0,
        dashboardEvents: window.fitAccessDebug.dashboard?.events?.length || 0,
        dashboardNotifications: window.fitAccessDebug.dashboard?.notifications?.length || 0,
        superAdminTrainers: window.fitAccessDebug.superAdmin?.trainers?.length || 0
      };
      
      console.log('üìä –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ fitAccessDebug:', finalState);
      
      // ‚úÖ –ü–†–û–í–ï–†–Ø–ï–ú –ß–¢–û –í–°–ï –ö–û–ù–¢–ï–ö–°–¢–´ –ó–ê–†–ï–ì–ò–°–¢–†–ò–†–û–í–ê–ù–´
      const allRegistered = finalState.schedule && finalState.dashboard && finalState.superAdmin;
      if (allRegistered) {
        console.log('üéâ –í—Å–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!');
        console.log('üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ: fitAccessDebug.help()');
        console.log('üìä –û–±–∑–æ—Ä —Å–∏—Å—Ç–µ–º—ã: fitAccessDebug.getOverview()');
      } else {
        console.warn('‚ö†Ô∏è –ù–µ –≤—Å–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã:', {
          missing: {
            schedule: !finalState.schedule,
            dashboard: !finalState.dashboard,
            superAdmin: !finalState.superAdmin
          }
        });
      }
    }
  }, [schedule, dashboard, superAdmin]);

  return null; // –ù–µ–≤–∏–¥–∏–º—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
}
