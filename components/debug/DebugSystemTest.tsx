// components/admin/debug/DebugSystemTest.tsx
"use client";

import React, { useState, useEffect } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { ensureDebugSystem } from '@/utils/cleanTypes';

interface SystemStatus {
  debugSystem: boolean;
  scheduleContext: boolean;
  dashboardContext: boolean;
  superAdminContext: boolean;
  globalFunctions: boolean;
}

export function DebugSystemTest() {
  const [status, setStatus] = useState<SystemStatus>({
    debugSystem: false,
    scheduleContext: false,
    dashboardContext: false,
    superAdminContext: false,
    globalFunctions: false
  });
  
  const [testResults, setTestResults] = useState<string[]>([]);
  const [isRunning, setIsRunning] = useState(false);

  const checkSystemStatus = () => {
    if (typeof window === 'undefined') return;

    const newStatus: SystemStatus = {
      debugSystem: !!window.fitAccessDebug,
      scheduleContext: !!window.fitAccessDebug?.schedule,
      dashboardContext: !!window.fitAccessDebug?.dashboard,
      superAdminContext: !!window.fitAccessDebug?.superAdmin,
      // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
      globalFunctions: !!(
        typeof window.diagnoseContexts !== 'undefined' && 
        typeof window.forceRegisterContexts !== 'undefined'
      )
    };

    setStatus(newStatus);
  };

  const addTestResult = (message: string) => {
    setTestResults(prev => [...prev, `${new Date().toLocaleTimeString()}: ${message}`]);
  };

  // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π
  const isFunctionAvailable = (obj: any, functionName: string): boolean => {
    return obj && typeof obj[functionName] === 'function';
  };

  const runSystemTest = async () => {
    setIsRunning(true);
    setTestResults([]);
    
    try {
      addTestResult('üîÑ –ù–∞—á–∏–Ω–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π —Ç–µ—Å—Ç...');
      
      // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é debug —Å–∏—Å—Ç–µ–º—ã
      ensureDebugSystem();
      addTestResult('‚úÖ Debug —Å–∏—Å—Ç–µ–º–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
      
      // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–≤
      if (window.fitAccessDebug?.schedule) {
        addTestResult('‚úÖ Schedule –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–æ—Å—Ç—É–ø–µ–Ω');
        
        // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É
        if (isFunctionAvailable(window.fitAccessDebug.schedule, 'getStats')) {
          try {
            const stats = window.fitAccessDebug.schedule.getStats();
            addTestResult(`üìä Schedule —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: ${JSON.stringify(stats)}`);
          } catch (error) {
            addTestResult(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ Schedule: ${error}`);
          }
        } else {
          addTestResult('‚ö†Ô∏è –§—É–Ω–∫—Ü–∏—è getStats –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ Schedule –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ');
        }
      } else {
        addTestResult('‚ùå Schedule –∫–æ–Ω—Ç–µ–∫—Å—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
      }
      
      if (window.fitAccessDebug?.dashboard) {
        addTestResult('‚úÖ Dashboard –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–æ—Å—Ç—É–ø–µ–Ω');
        
        // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É
        if (isFunctionAvailable(window.fitAccessDebug.dashboard, 'getStats')) {
          try {
            const stats = window.fitAccessDebug.dashboard.getStats();
            addTestResult(`üìä Dashboard —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: ${JSON.stringify(stats)}`);
          } catch (error) {
            addTestResult(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ Dashboard: ${error}`);
          }
        } else {
          addTestResult('‚ö†Ô∏è –§—É–Ω–∫—Ü–∏—è getStats –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ Dashboard –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ');
        }
      } else {
        addTestResult('‚ùå Dashboard –∫–æ–Ω—Ç–µ–∫—Å—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
      }
      
      // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
      if (typeof window.diagnoseContexts !== 'undefined' && typeof window.diagnoseContexts === 'function') {
        addTestResult('‚úÖ –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è diagnoseContexts –¥–æ—Å—Ç—É–ø–Ω–∞');
        try {
          const diagnosis = window.diagnoseContexts();
          addTestResult(`üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞: ${JSON.stringify(diagnosis)}`);
        } catch (error) {
          addTestResult(`‚ùå –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: ${error}`);
        }
      } else {
        addTestResult('‚ùå –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è diagnoseContexts –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
      }
      
      // 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
      if (isFunctionAvailable(window.fitAccessDebug?.schedule, 'createEvent')) {
        try {
          const testEvent = {
            title: '–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ',
            type: 'training' as const,
            trainerId: 'test-trainer',
            trainerName: '–¢–µ—Å—Ç–æ–≤—ã–π —Ç—Ä–µ–Ω–µ—Ä',
            clientId: 'test-client',
            clientName: '–¢–µ—Å—Ç–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç',
            startTime: new Date(Date.now() + 60 * 60 * 1000).toISOString(),
            endTime: new Date(Date.now() + 2 * 60 * 60 * 1000).toISOString(),
            price: 1500,
            status: 'scheduled' as const
          };
          
          if (window.fitAccessDebug?.schedule) {
            await window.fitAccessDebug.schedule.createEvent(testEvent);
            addTestResult('‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ —Å–æ–∑–¥–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ');
          } else {
            addTestResult('‚ùå Schedule –∫–æ–Ω—Ç–µ–∫—Å—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è');
          }
        } catch (error) {
          addTestResult(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è: ${error}`);
        }
      } else {
        addTestResult('‚ö†Ô∏è –§—É–Ω–∫—Ü–∏—è createEvent –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ Schedule –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ');
      }
      
      // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é
      if (isFunctionAvailable(window.fitAccessDebug, 'sync')) {
        try {
          await window.fitAccessDebug.sync();
          addTestResult('‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
        } catch (error) {
          addTestResult(`‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: ${error}`);
        }
      } else {
        addTestResult('‚ö†Ô∏è –§—É–Ω–∫—Ü–∏—è sync –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
      }
      
      // 6. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã
      addTestResult('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏...');
      
      // –¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–∏ help
      if (isFunctionAvailable(window.fitAccessDebug, 'help')) {
        try {
          window.fitAccessDebug.help();
          addTestResult('‚úÖ –§—É–Ω–∫—Ü–∏—è help —Ä–∞–±–æ—Ç–∞–µ—Ç');
        } catch (error) {
          addTestResult(`‚ùå –û—à–∏–±–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ help: ${error}`);
        }
      }
      
      // –¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–∏ stats
      if (isFunctionAvailable(window.fitAccessDebug, 'stats')) {
        try {
          const globalStats = window.fitAccessDebug.stats();
          addTestResult(`üìä –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: ${JSON.stringify(globalStats)}`);
        } catch (error) {
          addTestResult(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≥–ª–æ–±–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: ${error}`);
        }
      }
      
      addTestResult('üéâ –°–∏—Å—Ç–µ–º–Ω—ã–π —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!');
      
    } catch (error) {
      addTestResult(`‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: ${error}`);
    } finally {
      setIsRunning(false);
      checkSystemStatus();
    }
  };

  const clearResults = () => {
    setTestResults([]);
  };

  // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –≤—ã–∑–æ–≤—ã —Ñ—É–Ω–∫—Ü–∏–π –≤ –±—ã—Å—Ç—Ä—ã—Ö –¥–µ–π—Å—Ç–≤–∏—è—Ö
  const executeQuickAction = (actionName: string, action: () => void) => {
    try {
      action();
      addTestResult(`‚úÖ ${actionName} –≤—ã–ø–æ–ª–Ω–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ`);
    } catch (error) {
      addTestResult(`‚ùå –û—à–∏–±–∫–∞ ${actionName}: ${error}`);
    }
  };

  useEffect(() => {
    checkSystemStatus();
    const interval = setInterval(checkSystemStatus, 1000);
    return () => clearInterval(interval);
  }, []);

  return (
    <div className="space-y-6">
      <Card>
        <CardHeader>
          <CardTitle>–°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-4">
            <div className="text-center">
              <div className="mb-2">üîß</div>
              <div className="text-sm font-medium">Debug —Å–∏—Å—Ç–µ–º–∞</div>
              <Badge className={status.debugSystem ? "bg-green-100 text-green-800" : "bg-red-100 text-red-800"}>
                {status.debugSystem ? '–ê–∫—Ç–∏–≤–Ω–∞' : '–ù–µ–∞–∫—Ç–∏–≤–Ω–∞'}
              </Badge>
            </div>
            
            <div className="text-center">
              <div className="mb-2">üìÖ</div>
              <div className="text-sm font-medium">Schedule</div>
              <Badge className={status.scheduleContext ? "bg-green-100 text-green-800" : "bg-red-100 text-red-800"}>
                {status.scheduleContext ? '–ü–æ–¥–∫–ª—é—á–µ–Ω' : '–û—Ç–∫–ª—é—á–µ–Ω'}
              </Badge>
            </div>
            
            <div className="text-center">
              <div className="mb-2">üìä</div>
              <div className="text-sm font-medium">Dashboard</div>
              <Badge className={status.dashboardContext ? "bg-green-100 text-green-800" : "bg-red-100 text-red-800"}>
                {status.dashboardContext ? '–ü–æ–¥–∫–ª—é—á–µ–Ω' : '–û—Ç–∫–ª—é—á–µ–Ω'}
              </Badge>
            </div>
            
            <div className="text-center">
              <div className="mb-2">üëë</div>
              <div className="text-sm font-medium">Super Admin</div>
              <Badge className={status.superAdminContext ? "bg-green-100 text-green-800" : "bg-red-100 text-red-800"}>
                {status.superAdminContext ? '–ü–æ–¥–∫–ª—é—á–µ–Ω' : '–û—Ç–∫–ª—é—á–µ–Ω'}
              </Badge>
            </div>
            
            <div className="text-center">
              <div className="mb-2">üåê</div>
              <div className="text-sm font-medium">–ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏</div>
              <Badge className={status.globalFunctions ? "bg-green-100 text-green-800" : "bg-red-100 text-red-800"}>
                {status.globalFunctions ? '–î–æ—Å—Ç—É–ø–Ω—ã' : '–ù–µ–¥–æ—Å—Ç—É–ø–Ω—ã'}
              </Badge>
            </div>
          </div>
        </CardContent>
      </Card>

      <Card>
        <CardHeader>
          <CardTitle>–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="flex gap-4 mb-4">
            <Button 
              onClick={runSystemTest} 
              disabled={isRunning}
              className="flex items-center gap-2"
            >
              {isRunning ? 'üîÑ –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è...' : 'üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç'}
            </Button>
            
            <Button 
              onClick={clearResults} 
              variant="outline"
              disabled={testResults.length === 0}
            >
              üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            </Button>
            
            <Button 
              onClick={checkSystemStatus} 
              variant="outline"
            >
              üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å
            </Button>
          </div>

          {testResults.length > 0 && (
            <div className="bg-gray-50 rounded-lg p-4 max-h-96 overflow-y-auto">
              <h4 className="font-medium mb-3">–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:</h4>
              <div className="space-y-2 font-mono text-sm">
                {testResults.map((result, index) => (
                  <div key={index} className="flex items-start gap-2">
                    <span className="text-gray-500 min-w-0 flex-shrink-0">
                      [{index + 1}]
                    </span>
                    <span className="break-all">{result}</span>
                  </div>
                ))}
              </div>
            </div>
          )}
        </CardContent>
      </Card>

      <Card>
        <CardHeader>
          <CardTitle>–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
            <Button 
              variant="outline" 
              onClick={() => executeQuickAction('–°–ø—Ä–∞–≤–∫–∞', () => {
                if (isFunctionAvailable(window.fitAccessDebug, 'help')) {
                  window.fitAccessDebug.help();
                  console.log('üìñ –°–ø—Ä–∞–≤–∫–∞ –≤—ã–≤–µ–¥–µ–Ω–∞ –≤ –∫–æ–Ω—Å–æ–ª—å');
                } else {
                  throw new Error('–§—É–Ω–∫—Ü–∏—è help –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
                }
              })}
              className="h-auto flex-col gap-2 py-4"
            >
              <span className="text-2xl">‚ùì</span>
              <span>–°–ø—Ä–∞–≤–∫–∞</span>
            </Button>
            
            <Button 
              variant="outline" 
              onClick={() => executeQuickAction('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', () => {
                if (isFunctionAvailable(window.fitAccessDebug, 'stats')) {
                  const stats = window.fitAccessDebug.stats();
                  console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã:', stats);
                } else {
                  throw new Error('–§—É–Ω–∫—Ü–∏—è stats –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
                }
              })}
              className="h-auto flex-col gap-2 py-4"
            >
              <span className="text-2xl">üìä</span>
              <span>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</span>
            </Button>
            
            <Button 
              variant="outline" 
              onClick={() => executeQuickAction('–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞', () => {
                if (typeof window.diagnoseContexts !== 'undefined' && typeof window.diagnoseContexts === 'function') {
                  const diagnosis = window.diagnoseContexts();
                  console.log('üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:', diagnosis);
                } else {
                  throw new Error('–§—É–Ω–∫—Ü–∏—è diagnoseContexts –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
                }
              })}
              className="h-auto flex-col gap-2 py-4"
            >
              <span className="text-2xl">üîç</span>
              <span>–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞</span>
                        </Button>
            
            <Button 
              variant="outline" 
              onClick={() => executeQuickAction('–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö', () => {
                if (isFunctionAvailable(window.fitAccessDebug, 'refreshAll')) {
                  window.fitAccessDebug.refreshAll();
                } else {
                  throw new Error('–§—É–Ω–∫—Ü–∏—è refreshAll –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
                }
              })}
              className="h-auto flex-col gap-2 py-4"
            >
              <span className="text-2xl">üîÑ</span>
              <span>–û–±–Ω–æ–≤–∏—Ç—å –≤—Å–µ</span>
            </Button>
          </div>
        </CardContent>
      </Card>

      {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π */}
      <Card>
        <CardHeader>
          <CardTitle>–î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞—Ö */}
            <div>
              <h4 className="font-medium mb-3">–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç—ã:</h4>
              <div className="space-y-2 text-sm">
                <div className="flex items-center justify-between">
                  <span>window.fitAccessDebug</span>
                  <Badge variant={status.debugSystem ? "default" : "secondary"}>
                    {status.debugSystem ? '‚úÖ' : '‚ùå'}
                  </Badge>
                </div>
                <div className="flex items-center justify-between">
                  <span>window.fitAccessDebug.schedule</span>
                  <Badge variant={status.scheduleContext ? "default" : "secondary"}>
                    {status.scheduleContext ? '‚úÖ' : '‚ùå'}
                  </Badge>
                </div>
                <div className="flex items-center justify-between">
                  <span>window.fitAccessDebug.dashboard</span>
                  <Badge variant={status.dashboardContext ? "default" : "secondary"}>
                    {status.dashboardContext ? '‚úÖ' : '‚ùå'}
                  </Badge>
                </div>
                <div className="flex items-center justify-between">
                  <span>window.fitAccessDebug.superAdmin</span>
                  <Badge variant={status.superAdminContext ? "default" : "secondary"}>
                    {status.superAdminContext ? '‚úÖ' : '‚ùå'}
                  </Badge>
                </div>
              </div>
            </div>

            {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ—É–Ω–∫—Ü–∏—è—Ö */}
            <div>
              <h4 className="font-medium mb-3">–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:</h4>
              <div className="space-y-2 text-sm">
                <div className="flex items-center justify-between">
                  <span>window.diagnoseContexts</span>
                  <Badge variant={typeof window !== 'undefined' && typeof window.diagnoseContexts !== 'undefined' ? "default" : "secondary"}>
                    {typeof window !== 'undefined' && typeof window.diagnoseContexts !== 'undefined' ? '‚úÖ' : '‚ùå'}
                  </Badge>
                </div>
                <div className="flex items-center justify-between">
                  <span>window.forceRegisterContexts</span>
                  <Badge variant={typeof window !== 'undefined' && typeof window.forceRegisterContexts !== 'undefined' ? "default" : "secondary"}>
                    {typeof window !== 'undefined' && typeof window.forceRegisterContexts !== 'undefined' ? '‚úÖ' : '‚ùå'}
                  </Badge>
                </div>
                <div className="flex items-center justify-between">
                  <span>fitAccessDebug.help</span>
                  <Badge variant={typeof window !== 'undefined' && isFunctionAvailable(window.fitAccessDebug, 'help') ? "default" : "secondary"}>
                    {typeof window !== 'undefined' && isFunctionAvailable(window.fitAccessDebug, 'help') ? '‚úÖ' : '‚ùå'}
                  </Badge>
                </div>
                <div className="flex items-center justify-between">
                  <span>fitAccessDebug.sync</span>
                  <Badge variant={typeof window !== 'undefined' && isFunctionAvailable(window.fitAccessDebug, 'sync') ? "default" : "secondary"}>
                    {typeof window !== 'undefined' && isFunctionAvailable(window.fitAccessDebug, 'sync') ? '‚úÖ' : '‚ùå'}
                  </Badge>
                </div>
              </div>
            </div>
          </div>

          {/* –ö–Ω–æ–ø–∫–∏ –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ */}
          <div className="mt-6 pt-6 border-t">
            <h4 className="font-medium mb-3">–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:</h4>
            <div className="flex gap-2 flex-wrap">
              <Button 
                size="sm" 
                variant="outline"
                onClick={() => executeQuickAction('–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è debug —Å–∏—Å—Ç–µ–º—ã', () => {
                  ensureDebugSystem();
                  checkSystemStatus();
                })}
              >
                üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å debug
              </Button>
              
              <Button 
                size="sm" 
                variant="outline"
                onClick={() => executeQuickAction('–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–≤', () => {
                  if (typeof window.forceRegisterContexts !== 'undefined' && typeof window.forceRegisterContexts === 'function') {
                    window.forceRegisterContexts();
                    checkSystemStatus();
                  } else {
                    throw new Error('–§—É–Ω–∫—Ü–∏—è forceRegisterContexts –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
                  }
                })}
              >
                üìã –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç—ã
              </Button>
              
              <Button 
                size="sm" 
                variant="outline"
                onClick={() => executeQuickAction('–û—á–∏—Å—Ç–∫–∞ debug –¥–∞–Ω–Ω—ã—Ö', () => {
                  if (window.fitAccessDebug) {
                    // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
                    if (window.fitAccessDebug.schedule) {
                      window.fitAccessDebug.schedule.events = [];
                    }
                    if (window.fitAccessDebug.dashboard) {
                      window.fitAccessDebug.dashboard.notifications = [];
                    }
                    if (window.fitAccessDebug.notifications) {
                      window.fitAccessDebug.notifications = [];
                    }
                    checkSystemStatus();
                  } else {
                    throw new Error('Debug —Å–∏—Å—Ç–µ–º–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
                  }
                })}
              >
                üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
              </Button>
            </div>
          </div>
        </CardContent>
      </Card>

      {/* –ö–∞—Ä—Ç–æ—á–∫–∞ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ */}
      <Card>
        <CardHeader>
          <CardTitle>–¢–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –≤ —Å–∏—Å—Ç–µ–º–µ</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div className="bg-blue-50 rounded-lg p-4">
              <h5 className="font-medium text-blue-800 mb-2">–°–æ–±—ã—Ç–∏—è Schedule</h5>
              <div className="text-2xl font-bold text-blue-600">
                {typeof window !== 'undefined' && window.fitAccessDebug?.schedule?.events?.length || 0}
              </div>
              <div className="text-sm text-blue-600">–∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π</div>
            </div>
            
            <div className="bg-green-50 rounded-lg p-4">
              <h5 className="font-medium text-green-800 mb-2">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è Dashboard</h5>
              <div className="text-2xl font-bold text-green-600">
                {typeof window !== 'undefined' && window.fitAccessDebug?.dashboard?.notifications?.length || 0}
              </div>
              <div className="text-sm text-green-600">—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</div>
            </div>
            
            <div className="bg-purple-50 rounded-lg p-4">
              <h5 className="font-medium text-purple-800 mb-2">–û–±—â–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h5>
              <div className="text-2xl font-bold text-purple-600">
                {typeof window !== 'undefined' && window.fitAccessDebug?.notifications?.length || 0}
              </div>
              <div className="text-sm text-purple-600">–≤ —Å–∏—Å—Ç–µ–º–µ</div>
            </div>
          </div>
          
          <Button 
            className="mt-4" 
            variant="outline" 
            onClick={() => executeQuickAction('–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–æ–≤', () => {
              checkSystemStatus();
              // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
              setStatus(prevStatus => ({ ...prevStatus }));
            })}
          >
            üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å—á–µ—Ç—á–∏–∫–∏
          </Button>
        </CardContent>
      </Card>
    </div>
  );
}

