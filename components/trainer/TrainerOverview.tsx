// components/trainer/TrainerOverview.tsx (—Ñ–∏–Ω–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏)
"use client";

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { useTrainer } from '@/contexts/TrainerContext';
import { BarChart3, Activity, TrendingUp } from "lucide-react";
import TrainerStats from './TrainerStats';
import QuickActions from './QuickActions';
import TrainerNotifications from './TrainerNotifications';

export default function TrainerOverview() {
  const { clients, workouts, messages } = useTrainer();

  // –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏
  const getWeeklyAnalytics = () => {
    const days = ['–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±', '–í—Å'];
    const today = new Date();
    const startOfWeek = new Date(today);
    startOfWeek.setDate(today.getDate() - today.getDay() + 1);

    return days.map((day, index) => {
      const date = new Date(startOfWeek);
      date.setDate(startOfWeek.getDate() + index);
      const dateStr = date.toISOString().split('T')[0];
      
      const dayWorkouts = workouts.filter(w => w.date === dateStr);
      const hours = dayWorkouts.reduce((sum, w) => sum + (w.duration || 60), 0) / 60;
      
      return {
        day,
        workouts: dayWorkouts.length,
        hours: Math.round(hours * 10) / 10,
        date: dateStr
      };
    });
  };

  const weeklyData = getWeeklyAnalytics();
  const maxHours = Math.max(...weeklyData.map(d => d.hours), 1);

  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤ –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º
  const clientStats = {
    active: clients.filter(c => c.status === 'active').length,
    trial: clients.filter(c => c.status === 'trial').length,
    inactive: clients.filter(c => c.status === 'inactive').length
  };

  return (
    <div className="space-y-8">
      {/* –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <TrainerStats />

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç –≤ —Ç—Ä–∏ –∫–æ–ª–æ–Ω–∫–∏ */}
      <div className="grid grid-cols-1 lg:grid-cols-4 gap-8">
        {/* –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –∏ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ (2/4) */}
        <div className="lg:col-span-2">
          <QuickActions />
        </div>

        {/* –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (2/4) */}
        <div className="lg:col-span-2 space-y-6">
          {/* –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è */}
          <TrainerNotifications />

          {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤ */}
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <Activity className="h-5 w-5" />
                –ö–ª–∏–µ–Ω—Ç—ã –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                <div className="flex justify-between items-center">
                  <span className="text-sm text-gray-600">–ê–∫—Ç–∏–≤–Ω—ã–µ</span>
                  <div className="flex items-center gap-2">
                    <div className="w-20 bg-gray-200 rounded-full h-2">
                      <div 
                        className="bg-green-500 h-2 rounded-full transition-all duration-500"
                        style={{ width: `${clients.length > 0 ? (clientStats.active / clients.length) * 100 : 0}%` }}
                      ></div>
                    </div>
                    <span className="text-sm font-medium w-8 text-right">{clientStats.active}</span>
                  </div>
                </div>
                
                <div className="flex justify-between items-center">
                  <span className="text-sm text-gray-600">–ü—Ä–æ–±–Ω—ã–µ</span>
                  <div className="flex items-center gap-2">
                    <div className="w-20 bg-gray-200 rounded-full h-2">
                      <div 
                        className="bg-blue-500 h-2 rounded-full transition-all duration-500"
                        style={{ width: `${clients.length > 0 ? (clientStats.trial / clients.length) * 100 : 0}%` }}
                      ></div>
                    </div>
                    <span className="text-sm font-medium w-8 text-right">{clientStats.trial}</span>
                  </div>
                </div>
                
                <div className="flex justify-between items-center">
                  <span className="text-sm text-gray-600">–ù–µ–∞–∫—Ç–∏–≤–Ω—ã–µ</span>
                  <div className="flex items-center gap-2">
                    <div className="w-20 bg-gray-200 rounded-full h-2">
                      <div 
                        className="bg-gray-500 h-2 rounded-full transition-all duration-500"
                        style={{ width: `${clients.length > 0 ? (clientStats.inactive / clients.length) * 100 : 0}%` }}
                      ></div>
                    </div>
                    <span className="text-sm font-medium w-8 text-right">{clientStats.inactive}</span>
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>

          {/* –ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç—å –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏ */}
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <BarChart3 className="h-5 w-5" />
                –ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç—å –Ω–µ–¥–µ–ª–∏
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="grid grid-cols-7 gap-1">
                {weeklyData.map((dayData, index) => {
                  const percentage = maxHours > 0 ? (dayData.hours / maxHours) * 100 : 0;
                  const isToday = dayData.date === new Date().toISOString().split('T')[0];
                  
                  return (
                    <div key={index} className="text-center">
                      <div className="mb-2">
                        <div className={`h-16 bg-gray-200 rounded-lg relative overflow-hidden ${
                          isToday ? 'ring-2 ring-blue-500' : ''
                        }`}>
                          <div 
                            className="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-blue-500 to-blue-400 transition-all duration-500"
                            style={{ height: `${percentage}%` }}
                          ></div>
                        </div>
                      </div>
                      <p className={`text-xs font-medium ${isToday ? 'text-blue-600' : 'text-gray-700'}`}>
                        {dayData.day}
                      </p>
                      <p className="text-xs text-gray-600">{dayData.hours}—á</p>
                      <p className="text-xs text-gray-500">{dayData.workouts}</p>
                    </div>
                  );
                })}
              </div>
            </CardContent>
          </Card>

          {/* –ü—Ä–æ–≥—Ä–µ—Å—Å –º–µ—Å—è—Ü–∞ */}
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <TrendingUp className="h-5 w-5" />
                –ü—Ä–æ–≥—Ä–µ—Å—Å –º–µ—Å—è—Ü–∞
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                <div>
                  <div className="flex justify-between text-sm mb-1">
                    <span>–¢—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –ø—Ä–æ–≤–µ–¥–µ–Ω–æ</span>
                    <span>{workouts.filter(w => w.status === 'completed').length}/100</span>
                  </div>
                  <div className="w-full bg-gray-200 rounded-full h-2">
                    <div 
                      className="bg-green-600 h-2 rounded-full transition-all duration-500"
                      style={{ width: `${Math.min((workouts.filter(w => w.status === 'completed').length / 100) * 100, 100)}%` }}
                    ></div>
                  </div>
                </div>
                
                <div>
                  <div className="flex justify-between text-sm mb-1">
                    <span>–ù–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤</span>
                    <span>{clientStats.trial}/10</span>
                  </div>
                  <div className="w-full bg-gray-200 rounded-full h-2">
                    <div 
                      className="bg-blue-600 h-2 rounded-full transition-all duration-500"
                                            style={{ width: `${Math.min((clientStats.trial / 10) * 100, 100)}%` }}
                    ></div>
                  </div>
                </div>
                
                <div>
                  <div className="flex justify-between text-sm mb-1">
                    <span>–†–µ–π—Ç–∏–Ω–≥</span>
                    <span>4.8/5.0</span>
                  </div>
                  <div className="w-full bg-gray-200 rounded-full h-2">
                    <div 
                      className="bg-yellow-500 h-2 rounded-full transition-all duration-500"
                      style={{ width: '96%' }}
                    ></div>
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>
        </div>
      </div>

      {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
      <Card className="bg-gradient-to-r from-blue-50 to-green-50 border-2 border-dashed border-blue-300">
        <CardHeader>
          <CardTitle className="text-blue-900">üí° –°–æ–≤–µ—Ç—ã –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–π —Ä–∞–±–æ—Ç—ã</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm text-blue-800">
            <div>
              <strong>–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ:</strong> –°–æ—Å—Ç–∞–≤–ª—è–π—Ç–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é –≤–ø–µ—Ä–µ–¥ –¥–ª—è –ª—É—á—à–µ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –≤—Ä–µ–º–µ–Ω–∏
            </div>
            <div>
              <strong>–ö–ª–∏–µ–Ω—Ç—ã:</strong> –í–µ–¥–∏—Ç–µ –∑–∞–º–µ—Ç–∫–∏ –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ –∫–∞–∂–¥–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
            </div>
            <div>
              <strong>–û–±—â–µ–Ω–∏–µ:</strong> –†–µ–≥—É–ª—è—Ä–Ω–æ —Å–≤—è–∑—ã–≤–∞–π—Ç–µ—Å—å —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –º–æ—Ç–∏–≤–∞—Ü–∏–∏
            </div>
            <div>
              <strong>–†–∞–∑–≤–∏—Ç–∏–µ:</strong> –ò–∑—É—á–∞–π—Ç–µ –Ω–æ–≤—ã–µ –º–µ—Ç–æ–¥–∏–∫–∏ –∏ –ø–æ–¥—Ö–æ–¥—ã –∫ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞–º
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  );
}

