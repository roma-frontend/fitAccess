"use client";

import { memo } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { useToast } from "@/hooks/use-toast";

interface FormData {
  email: string;
  password: string;
  name: string;
  phone: string;
}

interface DevelopmentToolsProps {
  isLogin: boolean;
  loading: boolean;
  isValidating: boolean;
  onFillData: (data: FormData) => void;
  onClearForm: () => void;
  onShowForgotPassword: () => void;
}

export const DevelopmentTools = memo(function DevelopmentTools({
  isLogin,
  loading,
  isValidating,
  onFillData,
  onClearForm,
  onShowForgotPassword
}: DevelopmentToolsProps) {
  const { toast } = useToast();

  if (process.env.NODE_ENV !== "development") return null;

  const fillTestData = (isValid: boolean = true) => {
    if (isValid) {
      onFillData({
        email: "test@example.com",
        password: isLogin ? "password123" : "SecurePass123!",
        name: isLogin ? "" : "–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
        phone: isLogin ? "" : "+7 (999) 123-45-67",
      });
      toast({
        title: "–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã",
        description: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞–ª–∏–¥–∞—Ü–∏—é –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ä–º—É",
      });
    } else {
      onFillData({
        email: "invalid-email",
        password: "123",
        name: isLogin ? "" : "–ê",
        phone: "",
      });
      toast({
        title: "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã",
        description: "–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞ —Ä–∞–±–æ—Ç—É –≤–∞–ª–∏–¥–∞—Ü–∏–∏",
      });
    }
  };

  const fillRealData = () => {
    onFillData({
      email: "user@gmail.com",
      password: isLogin ? "password123" : "SecurePass123!",
      name: isLogin ? "" : "–†–µ–∞–ª—å–Ω—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
      phone: isLogin ? "" : "+7 (999) 123-45-67",
    });
    toast({
      title: "–†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã",
      description: "Gmail –∞–¥—Ä–µ—Å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è",
    });
  };

  const handleClearForm = () => {
    onClearForm();
    toast({
      title: "–§–æ—Ä–º–∞ –æ—á–∏—â–µ–Ω–∞",
      description: "–í—Å–µ –ø–æ–ª—è –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è —Å–±—Ä–æ—à–µ–Ω—ã",
    });
  };

  const testPasswordReset = () => {
    onShowForgotPassword();
    toast({
      title: "–¢–µ—Å—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è",
      description: "–û—Ç–∫—Ä—ã—Ç–∞ —Ñ–æ—Ä–º–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å —Ç–µ—Å—Ç–æ–≤—ã–º email",
    });
  };

  return (
    <Card className="bg-yellow-50 border-yellow-200">
      <CardHeader className="pb-2">
        <CardTitle className="text-sm text-yellow-900">
          üß™ –ë—ã—Å—Ç—Ä–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
        </CardTitle>
      </CardHeader>
      <CardContent className="pt-0 space-y-2">
        <Button
          onClick={() => fillTestData(true)}
          variant="outline"
          size="sm"
          className="w-full text-xs"
          disabled={loading || isValidating}
        >
          üöÄ –ó–∞–ø–æ–ª–Ω–∏—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        </Button>

        <Button
          onClick={fillRealData}
          variant="outline"
          size="sm"
          className="w-full text-xs"
          disabled={loading || isValidating}
        >
          üìß –ó–∞–ø–æ–ª–Ω–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π email
        </Button>

        <Button
          onClick={() => fillTestData(false)}
          variant="outline"
          size="sm"
          className="w-full text-xs"
          disabled={loading || isValidating}
        >
          ‚ö†Ô∏è –ó–∞–ø–æ–ª–Ω–∏—Ç—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        </Button>

        <Button
          onClick={handleClearForm}
          variant="outline"
          size="sm"
          className="w-full text-xs"
          disabled={loading || isValidating}
        >
          üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å —Ñ–æ—Ä–º—É
        </Button>

        <Button
          onClick={testPasswordReset}
          variant="outline"
          size="sm"
          className="w-full text-xs"
          disabled={loading || isValidating}
        >
          üîë –¢–µ—Å—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è
        </Button>
      </CardContent>
    </Card>
  );
});
