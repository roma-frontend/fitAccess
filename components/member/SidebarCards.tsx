// components/member/SidebarCards.tsx
"use client";

import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Receipt, TrendingUp, Home } from "lucide-react";
import { useRouter } from "next/navigation";

interface SidebarCardsProps {
  stats: {
    completed: number;
  };
  onGoHome: () => void;
}

export default function SidebarCards({ stats, onGoHome }: SidebarCardsProps) {
  const router = useRouter();

  return (
    <>
      {/* –ò—Å—Ç–æ—Ä–∏—è –ø–æ–∫—É–ø–æ–∫ */}
      <Card className="shadow-lg bg-gradient-to-br from-indigo-50 to-purple-50 border-indigo-200 border-0">
        <CardContent className="p-6 text-center">
          <div className="w-12 h-12 bg-gradient-to-r from-indigo-500 to-purple-500 rounded-full flex items-center justify-center mx-auto mb-4">
            <Receipt className="h-6 w-6 text-white" />
          </div>
          <h3 className="font-semibold text-gray-900 mb-2">
            –ò—Å—Ç–æ—Ä–∏—è –ø–æ–∫—É–ø–æ–∫
          </h3>
          <p className="text-sm text-gray-600 mb-4">
            –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–π—Ç–µ —á–µ–∫–∏ –∏ –ø–æ–≤—Ç–æ—Ä—è–π—Ç–µ –∑–∞–∫–∞–∑—ã
          </p>
          <Button
            onClick={() => router.push("/member-dashboard/orders")}
            variant="outline"
            className="w-full"
          >
            <Receipt className="h-4 w-4 mr-2" />
            –ú–æ–∏ –∑–∞–∫–∞–∑—ã
          </Button>
        </CardContent>
      </Card>

      {/* –ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ */}
      <Card className="shadow-lg bg-gradient-to-br from-purple-50 to-pink-50 border-purple-200 border-0">
        <CardContent className="p-6 text-center">
          <div className="w-12 h-12 bg-gradient-to-r from-purple-500 to-pink-500 rounded-full flex items-center justify-center mx-auto mb-4">
            <TrendingUp className="h-6 w-6 text-white" />
          </div>
          <h3 className="font-semibold text-gray-900 mb-2">
            –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! üí™
          </h3>
          <p className="text-sm text-gray-600 mb-4">
            –í—ã —É–∂–µ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ {Math.round((stats.completed / 20) * 100)}%
            –º–µ—Å—è—á–Ω–æ–π —Ü–µ–ª–∏
          </p>
          <Button
            size="sm"
            className="bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600"
            onClick={() => router.push("/trainers")}
          >
            –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
          </Button>
        </CardContent>
      </Card>

      {/* –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ */}
      <Card className="shadow-lg bg-gradient-to-br from-blue-50 to-green-50 border-blue-200 border-0">
        <CardContent className="p-6 text-center">
          <div className="w-12 h-12 bg-gradient-to-r from-blue-500 to-green-500 rounded-full flex items-center justify-center mx-auto mb-4">
            <Home className="h-6 w-6 text-white" />
          </div>
          <h3 className="font-semibold text-gray-900 mb-2">
            –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
          </h3>
          <p className="text-sm text-gray-600 mb-4">
            –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å–∞–π—Ç–∞
          </p>
          <Button
            onClick={onGoHome}
            variant="outline"
            className="w-full"
          >
            <Home className="h-4 w-4 mr-2" />
            –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ –≥–ª–∞–≤–Ω—É—é
          </Button>
        </CardContent>
      </Card>
    </>
  );
}
