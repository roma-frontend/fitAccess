// –û–±–Ω–æ–≤–∏—Ç–µ ProductGrid.tsx
import React, { memo, useEffect } from 'react';
import { useShopProductsAPI } from '@/hooks/useShopProductsAPI';
import { useProductsStore } from '@/stores/productsStore';
import ProductCard from './ProductCard';
import { Loader2, Package, AlertCircle } from 'lucide-react';

const ProductGrid = memo(() => {
  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ API - –∏—Å–ø—Ä–∞–≤–ª—è–µ–º destructuring
  const { products: apiProducts, isLoading: apiLoading, error: apiError } = useShopProductsAPI();
  
  // –ü–æ–ª—É—á–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑ store
  const { 
    filteredProducts, 
    loading: storeLoading, 
    error: storeError,
    setProducts,
    setLoading,
    setError 
  } = useProductsStore();

  // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º API –¥–∞–Ω–Ω—ã–µ —Å–æ store
  useEffect(() => {
    setLoading(apiLoading);
  }, [apiLoading, setLoading]);

  useEffect(() => {
    setError(apiError);
  }, [apiError, setError]);

  useEffect(() => {
    if (apiProducts && apiProducts.length > 0) {
      console.log('üîÑ ProductGrid: –û–±–Ω–æ–≤–ª—è–µ–º store —Å –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏:', apiProducts.length);
      setProducts(apiProducts);
    }
  }, [apiProducts, setProducts]);

  const loading = apiLoading || storeLoading;
  const error = apiError || storeError;

  // –û—Å—Ç–∞–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ –æ—Å—Ç–∞–µ—Ç—Å—è —Ç–æ–π –∂–µ...
  if (loading) {
    return (
      <div className="flex items-center justify-center py-12">
        <div className="text-center">
          <Loader2 className="h-8 w-8 animate-spin mx-auto mb-4 text-blue-500" />
          <p className="text-gray-600">–ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã...</p>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="flex items-center justify-center py-12">
        <div className="text-center">
          <AlertCircle className="h-8 w-8 mx-auto mb-4 text-red-500" />
          <p className="text-red-600 mb-2">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤</p>
          <p className="text-gray-600 text-sm">{error}</p>
        </div>
      </div>
    );
  }

  if (filteredProducts.length === 0) {
    return (
      <div className="flex items-center justify-center py-12">
        <div className="text-center">
          <Package className="h-12 w-12 mx-auto mb-4 text-gray-400" />
          <h3 className="text-lg font-medium text-gray-900 mb-2">
            –ü—Ä–æ–¥—É–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
          </h3>
          <p className="text-gray-600">
            –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã –∏–ª–∏ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
          </p>
        </div>
      </div>
    );
  }

  return (
    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      {filteredProducts.map((product) => (
        <ProductCard key={product._id} product={product} />
      ))}
    </div>
  );
});

ProductGrid.displayName = 'ProductGrid';
export default ProductGrid;
