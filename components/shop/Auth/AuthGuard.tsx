import React, { memo, useEffect } from 'react';
import { Card, CardHeader, CardTitle, CardDescription, CardContent } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Alert, AlertDescription } from '@/components/ui/alert';
import { ShoppingCart, LogIn, Shield, AlertCircle, User } from 'lucide-react';
import { useRouter } from 'next/navigation';
import { getRoleDisplayName } from '@/utils/productUtils';
import { Badge } from '@/components/ui/badge';

interface AuthGuardProps {
  isAuthenticated: boolean;
  hasShopAccess: boolean;
  user: any;
  loading: boolean;
}

const AuthGuard = memo(({ isAuthenticated, hasShopAccess, user, loading }: AuthGuardProps) => {
  const router = useRouter();

  // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
  useEffect(() => {
    console.log('üõ°Ô∏è AuthGuard Debug:', {
      loading,
      isAuthenticated,
      hasShopAccess,
      userRole: user?.role,
      userEmail: user?.email,
      shouldShowGuard: loading || !isAuthenticated
    });
  }, [loading, isAuthenticated, hasShopAccess, user]);

  if (loading) {
    console.log('üîÑ AuthGuard: –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É');
    return <LoadingState />;
  }

  if (!isAuthenticated) {
    console.log('‚ùå AuthGuard: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
    return <LoginRequired />;
  }

  // –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É hasShopAccess –∏–ª–∏ –¥–µ–ª–∞–µ–º –µ—ë –±–æ–ª–µ–µ –≥–∏–±–∫–æ–π
  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, —Ä–∞–∑—Ä–µ—à–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ –º–∞–≥–∞–∑–∏–Ω—É
  console.log('‚úÖ AuthGuard: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –¥–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω');
  return null; // –î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω
});

// –û—Å—Ç–∞–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π...
const LoadingState = memo(() => (
  <div className="flex items-center justify-center min-h-screen">
    <div className="text-center">
      <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500 mx-auto mb-4"></div>
      <p>–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –º–∞–≥–∞–∑–∏–Ω—É...</p>
    </div>
  </div>
));

const LoginRequired = memo(() => {
  const router = useRouter();

  const handleLogin = () => {
    sessionStorage.setItem("returnUrl", "/shop");
    router.push("/member-login");
  };

  const handleStaffLogin = () => {
    sessionStorage.setItem("returnUrl", "/shop");
    router.push("/staff-login");
  };

  return (
    <div className="min-h-screen bg-gray-50 flex items-center justify-center p-8">
      <Card className="w-full max-w-md">
        <CardHeader className="text-center">
          <div className="w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4">
            <ShoppingCart className="h-8 w-8 text-blue-600" />
          </div>
          <CardTitle>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω FitAccess</CardTitle>
          <CardDescription>
            –î–ª—è —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ–∫—É–ø–æ–∫ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É
          </CardDescription>
        </CardHeader>
        <CardContent className="space-y-4">
          <Alert>
            <AlertCircle className="h-4 w-4" />
            <AlertDescription>
              –ú–∞–≥–∞–∑–∏–Ω –¥–æ—Å—Ç—É–ø–µ–Ω –≤—Å–µ–º –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
            </AlertDescription>
          </Alert>

          <div className="space-y-2">
            <Button onClick={handleLogin} className="w-full">
              <LogIn className="h-4 w-4 mr-2" />
              –í–æ–π—Ç–∏ –∫–∞–∫ —É—á–∞—Å—Ç–Ω–∏–∫
            </Button>

            <Button
              variant="outline"
              onClick={handleStaffLogin}
              className="w-full"
            >
              <Shield className="h-4 w-4 mr-2" />
              –í—Ö–æ–¥ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∞
            </Button>

            <Button
              variant="ghost"
              onClick={() => router.push("/")}
              className="w-full"
            >
              –ù–∞ –≥–ª–∞–≤–Ω—É—é
            </Button>
          </div>
        </CardContent>
      </Card>
    </div>
  );
});

AuthGuard.displayName = 'AuthGuard';
LoadingState.displayName = 'LoadingState';
LoginRequired.displayName = 'LoginRequired';

export default AuthGuard;
