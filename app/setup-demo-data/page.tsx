// app/setup-demo-data/page.tsx (–Ω–æ–≤—ã–π —Ñ–∞–π–ª)
"use client";

import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { CheckCircle, Loader2 } from "lucide-react";

export default function SetupDemoDataPage() {
  const [loading, setLoading] = useState(false);
  const [results, setResults] = useState<string[]>([]);
  const [completed, setCompleted] = useState(false);

  const setupDemoData = async () => {
    setLoading(true);
    setResults([]);

    try {
      // –°–æ–∑–¥–∞–µ–º —Ç—Ä–µ–Ω–µ—Ä–æ–≤
      setResults((prev) => [...prev, "üèÉ‚Äç‚ôÇÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–µ–Ω–µ—Ä–æ–≤..."]);
      await createTrainers();

      // –°–æ–∑–¥–∞–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
      setResults((prev) => [...prev, "üë• –°–æ–∑–¥–∞–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤..."]);
      await createMembers();

      // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã
      setResults((prev) => [...prev, "üõí –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤..."]);
      await createProducts();

      // –°–æ–∑–¥–∞–µ–º –≥—Ä—É–ø–ø–æ–≤—ã–µ –∑–∞–Ω—è—Ç–∏—è
      setResults((prev) => [...prev, "üèãÔ∏è‚Äç‚ôÄÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä—É–ø–ø–æ–≤—ã—Ö –∑–∞–Ω—è—Ç–∏–π..."]);
      await createClasses();

      // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
      setResults((prev) => [...prev, "üìÖ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π..."]);
      await createBookings();

      // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã
      setResults((prev) => [...prev, "üõçÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤..."]);
      await createOrders();

      setResults((prev) => [...prev, "‚úÖ –î–µ–º–æ-–¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!"]);
      setCompleted(true);
    } catch (error) {
      setResults((prev) => [...prev, `‚ùå –û—à–∏–±–∫–∞: ${error}`]);
    } finally {
      setLoading(false);
    }
  };

  const createTrainers = async () => {
    const trainers = [
      {
        name: "–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞",
        email: "anna@fitclub.com",
        phone: "+7 (999) 111-11-11",
        password: "trainer123",
        bio: "–°–µ—Ä—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø–æ –π–æ–≥–µ –∏ –ø–∏–ª–∞—Ç–µ—Å—É —Å 5-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º. –ü–æ–º–æ–≥—É –≤–∞–º –æ–±—Ä–µ—Å—Ç–∏ –≥–∞—Ä–º–æ–Ω–∏—é —Ç–µ–ª–∞ –∏ –¥—É—Ö–∞.",
        specializations: ["–ô–æ–≥–∞", "–ü–∏–ª–∞—Ç–µ—Å", "–†–∞—Å—Ç—è–∂–∫–∞", "–ú–µ–¥–∏—Ç–∞—Ü–∏—è"],
        experience: 5,
        hourlyRate: 2500,
        workingHours: {
          monday: { start: "08:00", end: "16:00" },
          tuesday: { start: "08:00", end: "16:00" },
          wednesday: { start: "08:00", end: "16:00" },
          thursday: { start: "08:00", end: "16:00" },
          friday: { start: "08:00", end: "16:00" },
          saturday: { start: "10:00", end: "14:00" },
        },
      },
      {
        name: "–ú–∏—Ö–∞–∏–ª –í–æ–ª–∫–æ–≤",
        email: "mikhail@fitclub.com",
        phone: "+7 (999) 222-22-22",
        password: "trainer123",
        bio: "–ú–∞—Å—Ç–µ—Ä —Å–ø–æ—Ä—Ç–∞ –ø–æ —Ç—è–∂–µ–ª–æ–π –∞—Ç–ª–µ—Ç–∏–∫–µ. –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—Å—å –Ω–∞ —Å–∏–ª–æ–≤—ã—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Ö –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–º —Ç—Ä–µ–Ω–∏–Ω–≥–µ.",
        specializations: [
          "–°–∏–ª–æ–≤—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏",
          "–ö—Ä–æ—Å—Å—Ñ–∏—Ç",
          "–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç—Ä–µ–Ω–∏–Ω–≥",
          "–ü–∞—É—ç—Ä–ª–∏—Ñ—Ç–∏–Ω–≥",
        ],
        experience: 8,
        hourlyRate: 3000,
        workingHours: {
          monday: { start: "16:00", end: "22:00" },
          tuesday: { start: "16:00", end: "22:00" },
          wednesday: { start: "16:00", end: "22:00" },
          thursday: { start: "16:00", end: "22:00" },
          friday: { start: "16:00", end: "22:00" },
          sunday: { start: "10:00", end: "18:00" },
        },
      },
      {
        name: "–ï–ª–µ–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞",
        email: "elena@fitclub.com",
        phone: "+7 (999) 333-33-33",
        password: "trainer123",
        bio: "–≠–Ω–µ—Ä–≥–∏—á–Ω—ã–π —Ç—Ä–µ–Ω–µ—Ä –ø–æ –∞—ç—Ä–æ–±–∏–∫–µ –∏ —Ç–∞–Ω—Ü–∞–º. –°–¥–µ–ª–∞—é –≤–∞—à–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ —è—Ä–∫–∏–º–∏ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏–≤–Ω—ã–º–∏!",
        specializations: ["–ö–∞—Ä–¥–∏–æ", "–ê—ç—Ä–æ–±–∏–∫–∞", "–¢–∞–Ω—Ü—ã", "–ó—É–º–±–∞"],
        experience: 6,
        hourlyRate: 2800,
        workingHours: {
          monday: { start: "18:00", end: "21:00" },
          tuesday: { start: "18:00", end: "21:00" },
          wednesday: { start: "18:00", end: "21:00" },
          thursday: { start: "18:00", end: "21:00" },
          friday: { start: "18:00", end: "21:00" },
          saturday: { start: "16:00", end: "20:00" },
          sunday: { start: "16:00", end: "20:00" },
        },
      },
    ];

    for (const trainer of trainers) {
      await fetch("/api/trainers/create", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(trainer),
      });
    }
  };

  const createMembers = async () => {
    const members = [
      {
        name: "–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤",
        email: "ivan@example.com",
        phone: "+7 (999) 444-44-44",
        password: "member123",
        membershipType: "premium",
        membershipStart: Date.now() - 30 * 24 * 60 * 60 * 1000, // 30 –¥–Ω–µ–π –Ω–∞–∑–∞–¥
        membershipExpiry: Date.now() + 60 * 24 * 60 * 60 * 1000, // —á–µ—Ä–µ–∑ 60 –¥–Ω–µ–π
        emergencyContact: "–ú–∞—Ä–∏—è –ò–≤–∞–Ω–æ–≤–∞",
        emergencyPhone: "+7 (999) 555-55-55",
        status: "active",
        fitnessGoals: ["–ü–æ—Ö—É–¥–µ–Ω–∏–µ", "–ù–∞–±–æ—Ä –º—ã—à–µ—á–Ω–æ–π –º–∞—Å—Å—ã"],
        joinDate: Date.now() - 30 * 24 * 60 * 60 * 1000,
      },
      {
        name: "–ú–∞—Ä–∏—è –ü–µ—Ç—Ä–æ–≤–∞",
        email: "maria@example.com",
        phone: "+7 (999) 666-66-66",
        password: "member123",
        membershipType: "basic",
        membershipStart: Date.now() - 15 * 24 * 60 * 60 * 1000,
        membershipExpiry: Date.now() + 45 * 24 * 60 * 60 * 1000,
        status: "active",
        fitnessGoals: ["–ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ —Ñ–æ—Ä–º—ã", "–ì–∏–±–∫–æ—Å—Ç—å"],
        joinDate: Date.now() - 15 * 24 * 60 * 60 * 1000,
      },
      {
        name: "–ê–ª–µ–∫—Å–µ–π –°–∏–¥–æ—Ä–æ–≤",
        email: "alexey@example.com",
        phone: "+7 (999) 777-77-77",
        password: "member123",
        membershipType: "vip",
        membershipStart: Date.now() - 60 * 24 * 60 * 60 * 1000,
        membershipExpiry: Date.now() + 30 * 24 * 60 * 60 * 1000,
        status: "active",
        fitnessGoals: ["–°–∏–ª–æ–≤—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏", "–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å"],
        joinDate: Date.now() - 60 * 24 * 60 * 60 * 1000,
      },
    ];

    for (const member of members) {
      await fetch("/api/members/create", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(member),
      });
    }
  };

  const createProducts = async () => {
    const products = [
      {
        name: "–ü—Ä–æ—Ç–µ–∏–Ω–æ–≤—ã–π –∫–æ–∫—Ç–µ–π–ª—å",
        description: "–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—â–∏–π –∫–æ–∫—Ç–µ–π–ª—å —Å –≤—ã—Å–æ–∫–∏–º —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ–º –±–µ–ª–∫–∞",
        category: "drinks",
        price: 350,
        inStock: 25,
        minStock: 5,
        nutrition: { calories: 180, protein: 25, carbs: 8, fat: 3 },
        isPopular: true,
      },
      {
        name: "–ò–∑–æ—Ç–æ–Ω–∏–∫",
        description: "–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –Ω–∞–ø–∏—Ç–æ–∫ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —ç–ª–µ–∫—Ç—Ä–æ–ª–∏—Ç–æ–≤",
        category: "drinks",
        price: 120,
        inStock: 40,
        minStock: 10,
        nutrition: { calories: 45, protein: 0, carbs: 11, fat: 0 },
        isPopular: true,
      },
      {
        name: "–≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–π –±–∞—Ç–æ–Ω—á–∏–∫",
        description: "–ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π –±–∞—Ç–æ–Ω—á–∏–∫ —Å –æ—Ä–µ—Ö–∞–º–∏ –∏ —Å—É—Ö–æ—Ñ—Ä—É–∫—Ç–∞–º–∏",
        category: "snacks",
        price: 180,
        inStock: 15,
        minStock: 5,
        nutrition: { calories: 220, protein: 12, carbs: 25, fat: 8 },
      },
      {
        name: "BCAA",
        description: "–ê–º–∏–Ω–æ–∫–∏—Å–ª–æ—Ç—ã —Å —Ä–∞–∑–≤–µ—Ç–≤–ª–µ–Ω–Ω–æ–π —Ü–µ–ø—å—é –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è",
        category: "supplements",
        price: 450,
        inStock: 20,
        minStock: 3,
        isPopular: true,
      },
      {
        name: "–ö—Ä–µ–∞—Ç–∏–Ω",
        description: "–ú–æ–Ω–æ–≥–∏–¥—Ä–∞—Ç –∫—Ä–µ–∞—Ç–∏–Ω–∞ –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è —Å–∏–ª—ã –∏ –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç–∏",
        category: "supplements",
        price: 800,
        inStock: 12,
        minStock: 2,
      },
      {
        name: "–§–∏—Ç–Ω–µ—Å-–±—É—Ç—ã–ª–∫–∞",
        description: "–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è –±—É—Ç—ã–ª–∫–∞ FitAccess 750–º–ª",
        category: "merchandise",
        price: 590,
        inStock: 30,
        minStock: 5,
      },
      {
        name: "–ü–æ–ª–æ—Ç–µ–Ω—Ü–µ FitAccess",
        description: "–ú–∏–∫—Ä–æ—Ñ–∏–±—Ä–æ–≤–æ–µ –ø–æ–ª–æ—Ç–µ–Ω—Ü–µ —Å –ª–æ–≥–æ—Ç–∏–ø–æ–º –∫–ª—É–±–∞",
        category: "merchandise",
        price: 890,
        inStock: 20,
        minStock: 5,
      },
      {
        name: "–°–≤–µ–∂–µ–≤—ã–∂–∞—Ç—ã–π —Å–æ–∫",
        description: "–ê–ø–µ–ª—å—Å–∏–Ω–æ–≤—ã–π —Å–æ–∫ 300–º–ª",
        category: "drinks",
        price: 200,
        inStock: 18,
        minStock: 5,
        nutrition: { calories: 120, protein: 2, carbs: 28, fat: 0, sugar: 24 },
      },
    ];

    for (const product of products) {
      await fetch("/api/products/create", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(product),
      });
    }
  };

  const createClasses = async () => {
    const today = new Date();
    const tomorrow = new Date(today);
    tomorrow.setDate(tomorrow.getDate() + 1);
    const dayAfter = new Date(today);
    dayAfter.setDate(dayAfter.getDate() + 2);

    const classes = [
      {
        name: "–£—Ç—Ä–µ–Ω–Ω—è—è –π–æ–≥–∞",
        description: "–ú—è–≥–∫–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –¥–ª—è –ø—Ä–æ–±—É–∂–¥–µ–Ω–∏—è —Ç–µ–ª–∞ –∏ –¥—É—Ö–∞",
        instructorName: "–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞", // –ë—É–¥–µ—Ç –∑–∞–º–µ–Ω–µ–Ω–æ –Ω–∞ ID
        startTime: new Date(tomorrow.setHours(8, 0, 0, 0)).getTime(),
        endTime: new Date(tomorrow.setHours(9, 0, 0, 0)).getTime(),
        location: "–°—Ç—É–¥–∏—è –π–æ–≥–∏",
        capacity: 15,
        difficulty: "–ù–∞—á–∏–Ω–∞—é—â–∏–π",
        equipment: ["–ö–æ–≤—Ä–∏–∫ –¥–ª—è –π–æ–≥–∏", "–ë–ª–æ–∫–∏"],
        price: 800,
        isRecurring: true,
        recurringPattern: "weekly",
      },
      {
        name: "–°–∏–ª–æ–≤–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞",
        description: "–ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ —Å –æ—Ç—è–≥–æ—â–µ–Ω–∏—è–º–∏",
        instructorName: "–ú–∏—Ö–∞–∏–ª –í–æ–ª–∫–æ–≤",
        startTime: new Date(today.setHours(19, 0, 0, 0)).getTime(),
        endTime: new Date(today.setHours(20, 0, 0, 0)).getTime(),
        location: "–¢—Ä–µ–Ω–∞–∂–µ—Ä–Ω—ã–π –∑–∞–ª",
        capacity: 10,
        difficulty: "–°—Ä–µ–¥–Ω–∏–π",
        equipment: ["–ì–∞–Ω—Ç–µ–ª–∏", "–®—Ç–∞–Ω–≥–∞", "–¢—Ä–µ–Ω–∞–∂–µ—Ä—ã"],
        price: 1200,
        isRecurring: true,
      },
      {
        name: "–ó—É–º–±–∞",
        description:
          "–¢–∞–Ω—Ü–µ–≤–∞–ª—å–Ω–∞—è —Ñ–∏—Ç–Ω–µ—Å-–ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø–æ–¥ –ª–∞—Ç–∏–Ω–æ–∞–º–µ—Ä–∏–∫–∞–Ω—Å–∫—É—é –º—É–∑—ã–∫—É",
        instructorName: "–ï–ª–µ–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞",
        startTime: new Date(dayAfter.setHours(18, 0, 0, 0)).getTime(),
        endTime: new Date(dayAfter.setHours(19, 0, 0, 0)).getTime(),
        location: "–¢–∞–Ω—Ü–µ–≤–∞–ª—å–Ω—ã–π –∑–∞–ª",
        capacity: 20,
        difficulty: "–ù–∞—á–∏–Ω–∞—é—â–∏–π",
        price: 600,
        isRecurring: true,
      },
      {
        name: "–ö—Ä–æ—Å—Å—Ñ–∏—Ç",
        description: "–í—ã—Å–æ–∫–æ–∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞",
        instructorName: "–ú–∏—Ö–∞–∏–ª –í–æ–ª–∫–æ–≤",
        startTime: new Date(tomorrow.setHours(20, 0, 0, 0)).getTime(),
        endTime: new Date(tomorrow.setHours(21, 0, 0, 0)).getTime(),
        location: "–ó–∞–ª –∫—Ä–æ—Å—Å—Ñ–∏—Ç–∞",
        capacity: 12,
        difficulty: "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π",
        equipment: ["–ì–∏—Ä–∏", "–ö–∞–Ω–∞—Ç—ã", "–ú–µ–¥–±–æ–ª—ã"],
        price: 1500,
        isRecurring: true,
      },
    ];

    for (const classItem of classes) {
      await fetch("/api/classes/create", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(classItem),
      });
    }
  };

  const createBookings = async () => {
    // –°–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π
    const bookings = [
      {
        memberName: "–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤",
        trainerName: "–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞",
        startTime: Date.now() + 24 * 60 * 60 * 1000, // –∑–∞–≤—Ç—Ä–∞
        duration: 60,
        workoutType: "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞",
        notes: "–•–æ—á—É –ø–æ—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞–¥ –≥–∏–±–∫–æ—Å—Ç—å—é",
        price: 2500,
      },
      {
        memberName: "–ú–∞—Ä–∏—è –ü–µ—Ç—Ä–æ–≤–∞",
        trainerName: "–ú–∏—Ö–∞–∏–ª –í–æ–ª–∫–æ–≤",
        startTime: Date.now() + 48 * 60 * 60 * 1000, // –ø–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞
        duration: 90,
        workoutType: "–°–∏–ª–æ–≤–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞",
        notes: "–ü–µ—Ä–≤–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞, –Ω—É–∂–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è",
        price: 4500,
      },
    ];

    for (const booking of bookings) {
      await fetch("/api/bookings/create-demo", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(booking),
      });
    }
  };

  const createOrders = async () => {
    // –°–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤
    const orders = [
      {
        memberName: "–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤",
        items: [
          { productName: "–ü—Ä–æ—Ç–µ–∏–Ω–æ–≤—ã–π –∫–æ–∫—Ç–µ–π–ª—å", quantity: 1, price: 350 },
          { productName: "–≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–π –±–∞—Ç–æ–Ω—á–∏–∫", quantity: 2, price: 180 },
        ],
        totalAmount: 710,
        status: "ready",
        pickupType: "counter",
        paymentMethod: "card",
      },
      {
        memberName: "–ê–ª–µ–∫—Å–µ–π –°–∏–¥–æ—Ä–æ–≤",
        items: [
          { productName: "BCAA", quantity: 1, price: 450 },
          { productName: "–§–∏—Ç–Ω–µ—Å-–±—É—Ç—ã–ª–∫–∞", quantity: 1, price: 590 },
        ],
        totalAmount: 1040,
        status: "preparing",
        pickupType: "locker",
        paymentMethod: "membership",
      },
    ];

    for (const order of orders) {
      await fetch("/api/orders/create-demo", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(order),
      });
    }
  };

  return (
    <div className="min-h-screen bg-gray-50 p-8">
      <div className="max-w-4xl mx-auto">
        <Card className="mb-8">
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–µ–º–æ-–¥–∞–Ω–Ω—ã—Ö FitAccess
            </CardTitle>
          </CardHeader>
          <CardContent>
            <p className="text-gray-600 mb-6">
              –≠—Ç–æ—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç —Å–æ–∑–¥–∞—Å—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –≤—Å–µ—Ö
              –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π —Å–∏—Å—Ç–µ–º—ã FitAccess. –ë—É–¥—É—Ç —Å–æ–∑–¥–∞–Ω—ã —Ç—Ä–µ–Ω–µ—Ä—ã, —É—á–∞—Å—Ç–Ω–∏–∫–∏,
              –ø—Ä–æ–¥—É–∫—Ç—ã, –∑–∞–Ω—è—Ç–∏—è –∏ —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞–ø–∏—Å–∏.
            </p>

            <div className="bg-blue-50 border border-blue-200 rounded-lg p-4 mb-6">
              <h4 className="font-medium text-blue-900 mb-2">
                –ß—Ç–æ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–æ:
              </h4>
              <ul className="text-sm text-blue-800 space-y-1">
                <li>‚Ä¢ 3 —Ç—Ä–µ–Ω–µ—Ä–∞ —Å —Ä–∞–∑–Ω—ã–º–∏ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è–º–∏</li>
                <li>‚Ä¢ 3 —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Å –∞–∫—Ç–∏–≤–Ω—ã–º–∏ –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞–º–∏</li>
                <li>‚Ä¢ 8 –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≤ –º–∞–≥–∞–∑–∏–Ω–µ (–Ω–∞–ø–∏—Ç–∫–∏, —Å–ø–æ—Ä—Ç–ø–∏—Ç, –º–µ—Ä—á)</li>
                <li>‚Ä¢ 4 –≥—Ä—É–ø–ø–æ–≤—ã—Ö –∑–∞–Ω—è—Ç–∏—è –Ω–∞ –±–ª–∏–∂–∞–π—à–∏–µ –¥–Ω–∏</li>
                <li>‚Ä¢ –¢–µ—Å—Ç–æ–≤—ã–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –∑–∞–∫–∞–∑—ã</li>
                <li>‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</li>
              </ul>
            </div>

            <Button
              onClick={setupDemoData}
              disabled={loading || completed}
              className="w-full"
              size="lg"
            >
              {loading ? (
                <>
                  <Loader2 className="h-4 w-4 mr-2 animate-spin" />
                  –°–æ–∑–¥–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö...
                </>
              ) : completed ? (
                <>
                  <CheckCircle className="h-4 w-4 mr-2" />
                  –î–µ–º–æ-–¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã
                </>
              ) : (
                "üéØ –°–æ–∑–¥–∞—Ç—å –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ"
              )}
            </Button>
          </CardContent>
        </Card>
        {/* –õ–æ–≥ —Å–æ–∑–¥–∞–Ω–∏—è */}
        {results.length > 0 && (
          <Card>
            <CardHeader>
              <CardTitle>–ü—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="space-y-2 max-h-96 overflow-y-auto">
                {results.map((result, index) => (
                  <div
                    key={index}
                    className="flex items-center gap-2 p-2 bg-gray-50 rounded"
                  >
                    {result.includes("‚úÖ") ? (
                      <CheckCircle className="h-4 w-4 text-green-600" />
                    ) : result.includes("‚ùå") ? (
                      <div className="h-4 w-4 rounded-full bg-red-500" />
                    ) : (
                      <Loader2 className="h-4 w-4 animate-spin text-blue-600" />
                    )}
                    <span className="text-sm">{result}</span>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>
        )}

        {/* –¢–µ—Å—Ç–æ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã */}
        {completed && (
          <Card className="mt-6">
            <CardHeader>
              <CardTitle>üîë –¢–µ—Å—Ç–æ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                {/* –£—á–∞—Å—Ç–Ω–∏–∫–∏ */}
                <div>
                  <h4 className="font-medium mb-3">–£—á–∞—Å—Ç–Ω–∏–∫–∏:</h4>
                  <div className="space-y-3">
                    <div className="p-3 bg-green-50 border border-green-200 rounded">
                      <p className="font-medium">–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤</p>
                      <p className="text-sm text-gray-600">
                        ivan@example.com / member123
                      </p>
                      <Badge className="bg-purple-100 text-purple-800 mt-1">
                        Premium
                      </Badge>
                    </div>
                    <div className="p-3 bg-blue-50 border border-blue-200 rounded">
                      <p className="font-medium">–ú–∞—Ä–∏—è –ü–µ—Ç—Ä–æ–≤–∞</p>
                      <p className="text-sm text-gray-600">
                        maria@example.com / member123
                      </p>
                      <Badge className="bg-green-100 text-green-800 mt-1">
                        Basic
                      </Badge>
                    </div>
                    <div className="p-3 bg-yellow-50 border border-yellow-200 rounded">
                      <p className="font-medium">–ê–ª–µ–∫—Å–µ–π –°–∏–¥–æ—Ä–æ–≤</p>
                      <p className="text-sm text-gray-600">
                        alexey@example.com / member123
                      </p>
                      <Badge className="bg-yellow-100 text-yellow-800 mt-1">
                        VIP
                      </Badge>
                    </div>
                  </div>
                </div>

                {/* –¢—Ä–µ–Ω–µ—Ä—ã */}
                <div>
                  <h4 className="font-medium mb-3">–¢—Ä–µ–Ω–µ—Ä—ã:</h4>
                  <div className="space-y-3">
                    <div className="p-3 bg-pink-50 border border-pink-200 rounded">
                      <p className="font-medium">–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞</p>
                      <p className="text-sm text-gray-600">
                        anna@fitclub.com / trainer123
                      </p>
                      <p className="text-xs text-gray-500">–ô–æ–≥–∞, –ü–∏–ª–∞—Ç–µ—Å</p>
                    </div>
                    <div className="p-3 bg-indigo-50 border border-indigo-200 rounded">
                      <p className="font-medium">–ú–∏—Ö–∞–∏–ª –í–æ–ª–∫–æ–≤</p>
                      <p className="text-sm text-gray-600">
                        mikhail@fitclub.com / trainer123
                      </p>
                      <p className="text-xs text-gray-500">–°–∏–ª–æ–≤—ã–µ, –ö—Ä–æ—Å—Å—Ñ–∏—Ç</p>
                    </div>
                    <div className="p-3 bg-orange-50 border border-orange-200 rounded">
                      <p className="font-medium">–ï–ª–µ–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞</p>
                      <p className="text-sm text-gray-600">
                        elena@fitclub.com / trainer123
                      </p>
                      <p className="text-xs text-gray-500">–ö–∞—Ä–¥–∏–æ, –¢–∞–Ω—Ü—ã</p>
                    </div>
                  </div>
                </div>
              </div>

              <div className="mt-6 p-4 bg-gray-50 rounded-lg">
                <h4 className="font-medium mb-2">
                  –ë—ã—Å—Ç—Ä—ã–µ —Å—Å—ã–ª–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:
                </h4>
                <div className="grid grid-cols-2 md:grid-cols-4 gap-2">
                  <Button
                    variant="outline"
                    size="sm"
                    onClick={() => window.open("/member-login", "_blank")}
                  >
                    –í—Ö–æ–¥ —É—á–∞—Å—Ç–Ω–∏–∫–∞
                  </Button>
                  <Button
                    variant="outline"
                    size="sm"
                    onClick={() => window.open("/staff-login", "_blank")}
                  >
                    –í—Ö–æ–¥ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞
                  </Button>
                  <Button
                    variant="outline"
                    size="sm"
                    onClick={() => window.open("/book-trainer", "_blank")}
                  >
                    –ó–∞–ø–∏—Å—å –∫ —Ç—Ä–µ–Ω–µ—Ä—É
                  </Button>
                  <Button
                    variant="outline"
                    size="sm"
                    onClick={() => window.open("/shop", "_blank")}
                  >
                    –ú–∞–≥–∞–∑–∏–Ω
                  </Button>
                </div>
              </div>
            </CardContent>
          </Card>
        )}

        {/* –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏ */}
        {completed && (
          <Card className="mt-6">
            <CardHeader>
              <CardTitle>üéØ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                <div className="flex items-start gap-3">
                  <div className="w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center text-blue-600 font-bold text-sm">
                    1
                  </div>
                  <div>
                    <h4 className="font-medium">–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Å–∏—Å—Ç–µ–º—É</h4>
                    <p className="text-sm text-gray-600">
                      –í–æ–π–¥–∏—Ç–µ –ø–æ–¥ —Ä–∞–∑–Ω—ã–º–∏ –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏ –∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏
                    </p>
                  </div>
                </div>

                <div className="flex items-start gap-3">
                  <div className="w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center text-blue-600 font-bold text-sm">
                    2
                  </div>
                  <div>
                    <h4 className="font-medium">–ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</h4>
                    <p className="text-sm text-gray-600">
                      –î–æ–±–∞–≤—å—Ç–µ —Ä–µ–∞–ª—å–Ω—ã—Ö —Ç—Ä–µ–Ω–µ—Ä–æ–≤, –ø—Ä–æ–¥—É–∫—Ç—ã –∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π
                    </p>
                  </div>
                </div>

                <div className="flex items-start gap-3">
                  <div className="w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center text-blue-600 font-bold text-sm">
                    3
                  </div>
                  <div>
                    <h4 className="font-medium">–ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–π—Ç–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ</h4>
                    <p className="text-sm text-gray-600">
                      –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –∫–∞–º–µ—Ä—ã –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –ª–∏—Ü –∏ —Å–∫–∞–Ω–µ—Ä—ã QR-–∫–æ–¥–æ–≤
                    </p>
                  </div>
                </div>

                <div className="flex items-start gap-3">
                  <div className="w-8 h-8 bg-green-100 rounded-full flex items-center justify-center text-green-600 font-bold text-sm">
                    4
                  </div>
                  <div>
                    <h4 className="font-medium">–ó–∞–ø—É—Å–∫ –≤ –ø—Ä–æ–¥–∞–∫—à–Ω</h4>
                    <p className="text-sm text-gray-600">
                      –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –≤ —Ä–µ–∞–ª—å–Ω–æ–º —Ñ–∏—Ç–Ω–µ—Å-—Ü–µ–Ω—Ç—Ä–µ!
                    </p>
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>
        )}
      </div>
    </div>
  );
}
