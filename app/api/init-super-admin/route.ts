// app/api/init-super-admin/route.ts (–Ω–æ–≤—ã–π API –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏)
import { NextRequest, NextResponse } from 'next/server';
import { initializeSuperAdmin, hasSuperAdmin, getAllUsers } from '@/lib/users-db';

export async function POST(request: NextRequest) {
  try {
    console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∞...');
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∞
    await initializeSuperAdmin();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const superAdminExists = await hasSuperAdmin();
    const allUsers = await getAllUsers();
    
    return NextResponse.json({
      success: true,
      message: '–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞',
      superAdminExists,
      totalUsers: allUsers.length,
      users: allUsers.map(user => ({
        id: user._id,
        email: user.email,
        role: user.role,
        name: user.name,
        isActive: user.isActive
      }))
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∞:', error);
    return NextResponse.json({
      success: false,
      error: error instanceof Error ? error.message : '–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏'
    }, { status: 500 });
  }
}

export async function GET(request: NextRequest) {
  try {
    const superAdminExists = await hasSuperAdmin();
    const allUsers = await getAllUsers();
    
    return NextResponse.json({
      success: true,
      superAdminExists,
      totalUsers: allUsers.length,
      users: allUsers.map(user => ({
        id: user._id,
        email: user.email,
        role: user.role,
        name: user.name,
        isActive: user.isActive
      }))
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞:', error);
    return NextResponse.json({
      success: false,
      error: error instanceof Error ? error.message : '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞'
    }, { status: 500 });
  }
}
