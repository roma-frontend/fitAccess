// app/api/test-auth/route.ts (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
import { NextRequest, NextResponse } from 'next/server';
import { getSession } from '@/lib/simple-auth';

export async function GET(request: NextRequest) {
  try {
    console.log('üß™ test-auth: –Ω–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç');
    
    const sessionId = request.cookies.get('session_id')?.value;
    console.log('üç™ test-auth: session_id:', sessionId);
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ cookies –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º
    const allCookies: Record<string, string> = {};
    request.cookies.getAll().forEach(cookie => {
      allCookies[cookie.name] = cookie.value;
    });
    
    if (!sessionId) {
      return NextResponse.json({ 
        success: false, 
        error: 'session_id –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç',
        cookies: allCookies
      });
    }

    const session = getSession(sessionId);
    console.log('üë§ test-auth: —Å–µ—Å—Å–∏—è:', session);
    
    return NextResponse.json({
      success: true,
      sessionId,
      session,
      cookies: allCookies
    });

  } catch (error) {
    console.error('‚ùå test-auth: –æ—à–∏–±–∫–∞:', error);
    return NextResponse.json({ 
      success: false, 
      error: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞' 
    });
  }
}
