// app/api/products/deleted/route.ts
import { NextRequest, NextResponse } from 'next/server';
import { ConvexHttpClient } from "convex/browser";

const convex = new ConvexHttpClient(process.env.NEXT_PUBLIC_CONVEX_URL!);

export async function GET(request: NextRequest) {
  try {
    console.log("üîÑ API: –ü–æ–ª—É—á–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤");

    const deletedProducts = await convex.query("products:getDeleted");

    console.log("‚úÖ API: –£–¥–∞–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã –ø–æ–ª—É—á–µ–Ω—ã:", deletedProducts?.length || 0);
    
    return NextResponse.json({ 
      success: true, 
      data: deletedProducts || [],
      message: `–ù–∞–π–¥–µ–Ω–æ ${deletedProducts?.length || 0} —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤`
    });
  } catch (error) {
    console.error("‚ùå API: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤:", error);
    return NextResponse.json(
      { 
        success: false, 
        error: error instanceof Error ? error.message : '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤',
        data: []
      },
      { status: 500 }
    );
  }
}
