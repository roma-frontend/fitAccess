// app/api/bookings/my-bookings/route.ts (—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è)
import { NextRequest, NextResponse } from 'next/server';
import { getAuthFromRequest, createAuthErrorResponse } from '@/lib/universal-auth';

export async function GET(request: NextRequest) {
  try {
    console.log('üîç my-bookings: –Ω–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∑–∞–ø—Ä–æ—Å–∞');
    
    // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    const auth = getAuthFromRequest(request);
    console.log('üîê my-bookings: —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', {
      authenticated: auth.authenticated,
      system: auth.system,
      userRole: auth.user?.role
    });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –∏ —Ä–æ–ª—å
    const authError = createAuthErrorResponse(auth, ['member']);
    if (authError) {
      console.log('‚ùå my-bookings: –æ—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
      return NextResponse.json(authError, { status: 401 });
    }

    const user = auth.user!;
    console.log('‚úÖ my-bookings: –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞ –¥–ª—è:', user.email);

    // –ü–æ–∫–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ, –Ω–æ —Å —Ä–µ–∞–ª—å–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
    const bookings = [
      {
        id: '1',
        type: 'trainer',
        title: '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ —Å –ê–Ω–Ω–æ–π –ü–µ—Ç—Ä–æ–≤–æ–π',
        instructor: '–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞',
        date: '2024-01-20',
        time: '10:00-11:00',
        status: 'confirmed',
        price: '2000‚ÇΩ'
      },
      {
        id: '2',
        type: 'program',
        title: '–ô–æ–≥–∞ –∏ —Ä–µ–ª–∞–∫—Å',
        instructor: '–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞',
        date: '2024-01-22',
        time: '18:00-19:30',
        status: 'confirmed',
        price: '800‚ÇΩ'
      },
      {
        id: '3',
        type: 'trainer',
        title: '–°–∏–ª–æ–≤–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ —Å –ú–∏—Ö–∞–∏–ª–æ–º –í–æ–ª–∫–æ–≤—ã–º',
        instructor: '–ú–∏—Ö–∞–∏–ª –í–æ–ª–∫–æ–≤',
        date: '2024-01-15',
        time: '19:00-20:00',
        status: 'completed',
        price: '2500‚ÇΩ'
      }
    ];

    console.log('üìã my-bookings: –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:', bookings.length);

    return NextResponse.json({
      success: true,
      bookings: bookings,
      debug: {
        authSystem: auth.system,
        userEmail: user.email,
        bookingsCount: bookings.length
      }
    });

  } catch (error) {
    console.error('‚ùå my-bookings: –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
    
    return NextResponse.json(
      { 
        success: false, 
        error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π' 
      },
      { status: 500 }
    );
  }
}
