// app/api/admin/users/route.ts (–æ–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å Cloudinary)
import { NextRequest, NextResponse } from 'next/server';
import { getSession } from '@/lib/simple-auth';
import { 
  createUser, 
  getAllUsers, 
  canCreateRole, 
  canManageUser,
  updateUser,
  deleteUser,
  findUserById,
  isValidRole,
  User,
  CreateUserData
} from '@/lib/users-db';

// –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
export async function GET(request: NextRequest) {
  // –ü–ï–†–ï–ú–ï–©–ê–ï–ú: –û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –≤–Ω–µ try –±–ª–æ–∫–∞
  let roleFilter: string | null = null;
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    const sessionId = request.cookies.get('session_id')?.value || 
                     request.cookies.get('session_id_debug')?.value;
    
    if (!sessionId) {
      return NextResponse.json({ error: '–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω' }, { status: 401 });
    }

    const session = getSession(sessionId);
    if (!session) {
      return NextResponse.json({ error: '–°–µ—Å—Å–∏—è –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞' }, { status: 401 });
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    if (!['super-admin', 'admin', 'manager'].includes(session.user.role)) {
      return NextResponse.json({ error: '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤' }, { status: 403 });
    }

    // –ò–°–ü–†–ê–í–õ–Ø–ï–ú: –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
    const { searchParams } = new URL(request.url);
    roleFilter = searchParams.get('role'); // –£–±–∏—Ä–∞–µ–º const, —Ç–∞–∫ –∫–∞–∫ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —É–∂–µ –æ–±—ä—è–≤–ª–µ–Ω–∞
    
    console.log('API: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —Ñ–∏–ª—å—Ç—Ä –ø–æ —Ä–æ–ª–∏:', roleFilter);

    const users: User[] = await getAllUsers();
    
    console.log('API: –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ:', users.length);
    console.log('API: –†–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', users.map(u => ({ name: u.name, role: u.role })));
    
    // –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞—é—â–µ–≥–æ
    let filteredUsers = users;
    if (session.user.role === 'admin') {
      filteredUsers = users.filter(user => !['super-admin'].includes(user.role));
    } else if (session.user.role === 'manager') {
      filteredUsers = users.filter(user => !['super-admin', 'admin'].includes(user.role));
    }

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä—É role
    if (roleFilter === 'trainers') {
      filteredUsers = filteredUsers.filter(user => 
        user.role === 'trainer' || 
        user.role === 'admin' || 
        user.role === 'super-admin'
      );
      console.log('API: –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ —Ç—Ä–µ–Ω–µ—Ä–æ–≤:', filteredUsers.length);
    }

    // –£–±–∏—Ä–∞–µ–º –ø–∞—Ä–æ–ª–∏ –∏–∑ –æ—Ç–≤–µ—Ç–∞ –∏ –¥–æ–±–∞–≤–ª—è–µ–º photoUrl
    const safeUsers = filteredUsers.map(user => ({
      id: user._id,
      email: user.email,
      role: user.role,
      name: user.name,
      createdAt: user.createdAt,
      createdBy: user.createdBy,
      isActive: user.isActive,
      photoUrl: user.photoUrl || null,
      lastLogin: user.lastLogin || null
    }));

    console.log('API: –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', safeUsers.length);
    if (roleFilter === 'trainers') {
      console.log('API: –¢—Ä–µ–Ω–µ—Ä—ã:', safeUsers.map(u => ({ id: u.id, name: u.name, role: u.role })));
    }

    return NextResponse.json({
      success: true,
      users: safeUsers,
      canCreate: canCreateRole(session.user.role, 'member'),
      userRole: session.user.role,
      // –î–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
      trainers: roleFilter === 'trainers' ? safeUsers : undefined
    });

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', error);
    return NextResponse.json({ 
      error: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞',
      users: [],
      // –ò–°–ü–†–ê–í–õ–Ø–ï–ú: –¢–µ–ø–µ—Ä—å roleFilter –¥–æ—Å—Ç—É–ø–µ–Ω –∏ –∑–¥–µ—Å—å
      trainers: roleFilter === 'trainers' ? [] : undefined
    }, { status: 500 });
  }
}

// –°–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export async function POST(request: NextRequest) {
  try {
    console.log('üöÄ POST /api/admin/users - –Ω–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    const sessionId = request.cookies.get('session_id')?.value || 
                     request.cookies.get('session_id_debug')?.value;
    
    console.log('üç™ Session ID:', sessionId ? '–Ω–∞–π–¥–µ–Ω' : '–ù–ï –Ω–∞–π–¥–µ–Ω');
    
    if (!sessionId) {
      console.log('‚ùå –ù–µ—Ç session ID');
      return NextResponse.json({ error: '–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω' }, { status: 401 });
    }

    const session = getSession(sessionId);
    console.log('üë§ Session:', session ? `–Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è ${session.user.email} (${session.user.role})` : '–ù–ï –Ω–∞–π–¥–µ–Ω–∞');
    
    if (!session) {
      console.log('‚ùå –°–µ—Å—Å–∏—è –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞');
      return NextResponse.json({ error: '–°–µ—Å—Å–∏—è –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞' }, { status: 401 });
    }

    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞
    const body = await request.json();
    console.log('üìù –î–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞:', {
      ...body,
      password: body.password ? '[–°–ö–†–´–¢]' : '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç',
      hasPhoto: !!body.photoUrl
    });
    
    const { email, password, role, name, isActive, photoUrl } = body;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
    if (!email || !password || !role || !name) {
      console.log('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è:', { 
        email: !!email, 
        password: !!password, 
        role: !!role, 
        name: !!name 
      });
      return NextResponse.json({ 
        error: '–í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è' 
      }, { status: 400 });
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Ä–æ–ª–∏
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª—å:', role);
    if (!isValidRole(role)) {
      console.log('‚ùå –ù–µ–¥–æ–ø—É—Å—Ç–∏–º–∞—è —Ä–æ–ª—å:', role);
      return NextResponse.json({ 
        error: `–ù–µ–¥–æ–ø—É—Å—Ç–∏–º–∞—è —Ä–æ–ª—å: ${role}` 
      }, { status: 400 });
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–æ–ª–∏
    console.log('üîê –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞:', `${session.user.role} -> ${role}`);
    if (!canCreateRole(session.user.role, role)) {
      console.log('‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–æ–ª–∏');
      return NextResponse.json({ 
        error: `–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–æ–ª–∏: ${role}` 
      }, { status: 403 });
    }

    // –í–∞–ª–∏–¥–∞—Ü–∏—è URL —Ñ–æ—Ç–æ (–µ—Å–ª–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω)
    if (photoUrl) {
      console.log('üñºÔ∏è –ü—Ä–æ–≤–µ—Ä—è–µ–º URL —Ñ–æ—Ç–æ:', photoUrl.substring(0, 50) + '...');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –≤–∞–ª–∏–¥–Ω—ã–π URL Cloudinary
      if (!photoUrl.includes('cloudinary.com') && !photoUrl.startsWith('http')) {
        console.log('‚ùå –ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π URL —Ñ–æ—Ç–æ');
        return NextResponse.json({ 
          error: '–ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π URL —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏' 
        }, { status: 400 });
      }
    }

    console.log('‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã, —Å–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');

    // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const userData: CreateUserData = {
      email,
      password,
      role,
      name,
      isActive: isActive !== undefined ? isActive : true,
      photoUrl: photoUrl || undefined // ‚úÖ –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É —Ñ–æ—Ç–æ
    };

    console.log('üì§ –î–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', {
      ...userData,
      password: '[–°–ö–†–´–¢]',
      hasPhoto: !!userData.photoUrl
    });

    // –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const newUser: User = await createUser(userData, session.user.email);

    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ:', newUser._id);

    return NextResponse.json({
      success: true,
      message: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ',
      user: {
        id: newUser._id,
        email: newUser.email,
        role: newUser.role,
        name: newUser.name,
        createdAt: newUser.createdAt,
        isActive: newUser.isActive,
        photoUrl: newUser.photoUrl || null // ‚úÖ –í–æ–∑–≤—Ä–∞—â–∞–µ–º URL —Ñ–æ—Ç–æ
      }
    });

  } catch (error) {
    console.error('üí• –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
    
    // –ë–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏
    if (error instanceof Error) {
      console.error('üìã –°–æ–æ–±—â–µ–Ω–∏–µ –æ—à–∏–±–∫–∏:', error.message);
      console.error('üìã Stack trace:', error.stack);
    }
    
    return NextResponse.json({ 
      error: error instanceof Error ? error.message : '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
      details: error instanceof Error ? error.stack : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'
    }, { status: 400 });
  }
}

// –û–±–Ω–æ–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export async function PUT(request: NextRequest) {
  try {
    console.log('üîÑ PUT /api/admin/users - –Ω–∞—á–∞–ª–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è');
    
    const sessionId = request.cookies.get('session_id')?.value || 
                     request.cookies.get('session_id_debug')?.value;
    
    if (!sessionId) {
      console.log('‚ùå –ù–µ—Ç session ID');
      return NextResponse.json({ error: '–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω' }, { status: 401 });
    }

    const session = getSession(sessionId);
    if (!session) {
      console.log('‚ùå –°–µ—Å—Å–∏—è –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞');
      return NextResponse.json({ error: '–°–µ—Å—Å–∏—è –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞' }, { status: 401 });
    }

    const { id, updates } = await request.json();
    
    console.log('üìù –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', {
      id,
      updates: {
        ...updates,
        password: updates.password ? '[–°–ö–†–´–¢]' : '–Ω–µ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è',
        hasPhoto: !!updates.photoUrl
      }
    });
    
    const targetUser: User | null = await findUserById(id);
    if (!targetUser) {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω:', id);
      return NextResponse.json({ error: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω' }, { status: 404 });
    }

    if (!canManageUser(session.user.role, targetUser.role)) {
      console.log('‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º');
      return NextResponse.json({ 
        error: '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —ç—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º' 
      }, { status: 403 });
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª—å, –µ—Å–ª–∏ –æ–Ω–∞ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è
    if (updates.role) {
      console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—É—é —Ä–æ–ª—å:', updates.role);
      
      if (!isValidRole(updates.role)) {
        console.log('‚ùå –ù–µ–¥–æ–ø—É—Å—Ç–∏–º–∞—è —Ä–æ–ª—å:', updates.role);
        return NextResponse.json({ 
          error: `–ù–µ–¥–æ–ø—É—Å—Ç–∏–º–∞—è —Ä–æ–ª—å: ${updates.role}` 
        }, { status: 400 });
      }

      if (!canCreateRole(session.user.role, updates.role)) {
        console.log('‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ä–æ–ª–∏');
        return NextResponse.json({ 
          error: `–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ä–æ–ª–∏: ${updates.role}` 
        }, { status: 403 });
      }
    }

    // –í–∞–ª–∏–¥–∞—Ü–∏—è URL —Ñ–æ—Ç–æ (–µ—Å–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è)
    if (updates.photoUrl !== undefined) {
      console.log('üñºÔ∏è –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–æ—Ç–æ:', updates.photoUrl ? '–Ω–æ–≤–æ–µ —Ñ–æ—Ç–æ' : '—É–¥–∞–ª—è–µ–º —Ñ–æ—Ç–æ');
      
      if (updates.photoUrl && !updates.photoUrl.includes('cloudinary.com') && !updates.photoUrl.startsWith('http')) {
        console.log('‚ùå –ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π URL —Ñ–æ—Ç–æ');
        return NextResponse.json({ 
          error: '–ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π URL —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏' 
        }, { status: 400 });
      }
    }

    console.log('‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã, –æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');

    const updatedUser: User | null = await updateUser(id, updates, session.user.email);

    if (!updatedUser) {
      console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
      return NextResponse.json({ error: '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è' }, { status: 400 });
    }

    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ:', updatedUser._id);

    return NextResponse.json({
      success: true,
      message: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ',
      user: {
        id: updatedUser._id,
        email: updatedUser.email,
        role: updatedUser.role,
        name: updatedUser.name,
        isActive: updatedUser.isActive,
        photoUrl: updatedUser.photoUrl || null, // ‚úÖ –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Ñ–æ—Ç–æ
        lastLogin: updatedUser.lastLogin || null
      }
    });

  } catch (error) {
    console.error('üí• –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
    return NextResponse.json({ 
      error: error instanceof Error ? error.message : '–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è' 
    }, { status: 400 });
  }
}

// –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export async function DELETE(request: NextRequest) {
  try {
    console.log('üóëÔ∏è DELETE /api/admin/users - –Ω–∞—á–∞–ª–æ —É–¥–∞–ª–µ–Ω–∏—è');
    
    const sessionId = request.cookies.get('session_id')?.value || 
                     request.cookies.get('session_id_debug')?.value;
    
    if (!sessionId) {
      console.log('‚ùå –ù–µ—Ç session ID');
      return NextResponse.json({ error: '–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω' }, { status: 401 });
    }

    const session = getSession(sessionId);
    if (!session) {
      console.log('‚ùå –°–µ—Å—Å–∏—è –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞');
      return NextResponse.json({ error: '–°–µ—Å—Å–∏—è –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞' }, { status: 401 });
    }

    const { id } = await request.json();
    console.log('üéØ –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID:', id);
    
    const targetUser: User | null = await findUserById(id);
    if (!targetUser) {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω:', id);
      return NextResponse.json({ error: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω' }, { status: 404 });
    }

    console.log('üë§ –ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:', targetUser.name, targetUser.email);

    if (!canManageUser(session.user.role, targetUser.role)) {
      console.log('‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
      return NextResponse.json({ 
        error: '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è' 
      }, { status: 403 });
    }

    console.log('‚úÖ –ü—Ä–∞–≤–∞ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã, —É–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');

    const deleted: boolean = await deleteUser(id, session.user.email);

    if (deleted) {
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ');
      
      // –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É
      // –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ñ–æ—Ç–æ –∏–∑ Cloudinary, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
      if (targetUser.photoUrl) {
                console.log('üñºÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–º–µ–ª —Ñ–æ—Ç–æ:', targetUser.photoUrl);
        // TODO: –î–æ–±–∞–≤–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ –∏–∑ Cloudinary –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
        // await deleteFromCloudinary(targetUser.photoUrl);
      }
      
      return NextResponse.json({
        success: true,
        message: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ'
      });
    } else {
      console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
      return NextResponse.json({ error: '–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è' }, { status: 400 });
    }

  } catch (error) {
    console.error('üí• –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
    return NextResponse.json({ 
      error: error instanceof Error ? error.message : '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è' 
    }, { status: 400 });
  }
}

