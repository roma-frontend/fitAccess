// app/api/orders/create/route.ts (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
import { NextRequest, NextResponse } from 'next/server';
import { ConvexHttpClient } from "convex/browser";
import { canPurchaseFromShop } from '@/lib/permissions'; // –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç

const convex = new ConvexHttpClient(process.env.NEXT_PUBLIC_CONVEX_URL!);

export async function POST(request: NextRequest) {
  try {
    console.log('üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ - –Ω–∞—á–∞–ª–æ');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é —á–µ—Ä–µ–∑ –æ—Å–Ω–æ–≤–Ω—É—é —Å–∏—Å—Ç–µ–º—É
    const authResponse = await fetch(`${process.env.NEXT_PUBLIC_BASE_URL || 'http://localhost:3000'}/api/auth/check`, {
      headers: {
        'Cookie': request.headers.get('cookie') || '',
      },
    });
    
    const authData = await authResponse.json();
    console.log('üç™ Auth check result:', authData);
    
    if (!authData.authenticated) {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
      return NextResponse.json({ 
        error: '–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω' 
      }, { status: 401 });
    }

    // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê - –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏—Å—Ç–µ–º—É —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
    if (!canPurchaseFromShop(authData.user.role)) {
      console.log('‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω –¥–ª—è —Ä–æ–ª–∏:', authData.user.role);
      return NextResponse.json({ 
        error: '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤' 
      }, { status: 403 });
    }

    const body = await request.json();
    console.log('üìù –î–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞:', body);
    
    const {
      items,
      totalAmount,
      pickupType,
      paymentMethod,
      notes,
      status = 'pending',
      paymentIntentId,
      paymentId
    } = body;

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
    if (!items || items.length === 0) {
      return NextResponse.json(
        { error: '–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞' },
        { status: 400 }
      );
    }

    if (!totalAmount || totalAmount <= 0) {
      return NextResponse.json(
        { error: '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞' },
        { status: 400 }
      );
    }

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º ID –∑–∞–∫–∞–∑–∞
    const orderNumber = `ORD-${Date.now()}-${Math.random().toString(36).substr(2, 6).toUpperCase()}`;

    console.log('‚úÖ –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑ –≤ Convex...');

    // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è Convex
    const processedItems = items.map((item: any) => ({
      productId: item.productId ? String(item.productId) : undefined,
      productName: item.productName,
      quantity: item.quantity,
      price: item.price,
      totalPrice: item.totalPrice,
    }));

    console.log('üìù –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã:', processedItems);

    // –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑
    const orderId = await convex.mutation("orders:create", {
      memberId: authData.user.id,
      items: processedItems,
      totalAmount,
      status,
      pickupType,
      paymentMethod,
      notes: notes || undefined,
      orderTime: Date.now(),
      estimatedReadyTime: Date.now() + (15 * 60 * 1000), // +15 –º–∏–Ω—É—Ç
      
      // –î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞
      paymentIntentId: paymentIntentId || undefined,
      paymentId: paymentId || undefined,
      paymentStatus: paymentMethod === 'card' ? 'pending' : 'completed',
    });

    console.log('‚úÖ –ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω —Å ID:', orderId);

    // –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    try {
      // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ï –û–ü–†–ï–î–ï–õ–ï–ù–ò–ï –¢–ò–ü–ê –ü–û–õ–£–ß–ê–¢–ï–õ–Ø
      const recipientType = authData.user.role === 'member' ? 'member' : 'admin';

      // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      await convex.mutation("notifications:create", {
        recipientId: authData.user.id,
        recipientType: recipientType,
        title: "–ó–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç",
        message: `–í–∞—à –∑–∞–∫–∞–∑ ‚Ññ${orderNumber} –Ω–∞ —Å—É–º–º—É ${totalAmount} ‚ÇΩ –ø—Ä–∏–Ω—è—Ç –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É`,
        type: "order",
        relatedId: orderId,
        createdAt: Date.now(),
        isRead: false,
      });

      console.log('‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω—ã');
    } catch (error) {
      console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', error);
    }

    return NextResponse.json({
      success: true,
      orderId,
      orderNumber,
      message: '–ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ'
    });

  } catch (error) {
    console.error('üí• –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞:', error);
    return NextResponse.json(
      { 
        error: error instanceof Error ? error.message : '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞',
        details: error instanceof Error ? error.stack : undefined
      },
      { status: 500 }
    );
  }
}
