// app/api/check-super-admin/route.ts
import { NextRequest, NextResponse } from 'next/server';
import { ConvexHttpClient } from "convex/browser";

const convex = new ConvexHttpClient(process.env.NEXT_PUBLIC_CONVEX_URL!);

export async function GET(request: NextRequest) {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∞...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Convex
    if (!process.env.NEXT_PUBLIC_CONVEX_URL) {
      throw new Error('NEXT_PUBLIC_CONVEX_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    }

    // –ò—â–µ–º —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∞
    const superAdmin = await convex.query("users:getSuperAdmin");
    
    const exists = !!superAdmin;
    console.log(`${exists ? '‚úÖ' : '‚ùå'} –°—É–ø–µ—Ä-–∞–¥–º–∏–Ω ${exists ? '–Ω–∞–π–¥–µ–Ω' : '–Ω–µ –Ω–∞–π–¥–µ–Ω'}`);
    
    return NextResponse.json({
      success: true,
      exists,
      superAdmin: exists ? {
        id: superAdmin._id,
        email: superAdmin.email,
        name: superAdmin.name,
        role: superAdmin.role
      } : null
    });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∞:', error);
    
    return NextResponse.json(
      { 
        success: false,
        error: '–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∞',
        details: error instanceof Error ? error.message : String(error)
      },
      { status: 500 }
    );
  }
}
