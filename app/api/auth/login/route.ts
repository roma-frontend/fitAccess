// app/api/auth/login/route.ts (–æ–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è –ë–î)
import { NextRequest, NextResponse } from 'next/server';
import { validatePassword } from '@/lib/users-db'; // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ë–î –≤–µ—Ä—Å–∏—é
import { createSession } from '@/lib/simple-auth';

export async function POST(request: NextRequest) {
  try {
    const { email, password } = await request.json();

    if (!email || !password) {
      return NextResponse.json({
        success: false,
        error: 'Email –∏ –ø–∞—Ä–æ–ª—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã'
      }, { status: 400 });
    }

    console.log(`üîê –ü–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞: ${email}`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    const user = await validatePassword(email, password);
    
    if (!user) {
      console.log(`‚ùå –ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞: ${email}`);
      return NextResponse.json({
        success: false,
        error: '–ù–µ–≤–µ—Ä–Ω—ã–π email –∏–ª–∏ –ø–∞—Ä–æ–ª—å'
      }, { status: 401 });
    }

    if (!user.isActive) {
      console.log(`‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω: ${email}`);
      return NextResponse.json({
        success: false,
        error: '–ê–∫–∫–∞—É–Ω—Ç –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω'
      }, { status: 401 });
    }

    // –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é
    const sessionId = createSession({
      id: user._id,
      email: user.email,
      role: user.role,
      name: user.name
    });

    console.log(`‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥: ${user.email} (${user.role})`);

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º URL –¥–ª—è –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    let dashboardUrl = '/';
    switch (user.role) {
      case 'super-admin':
      case 'admin':
        dashboardUrl = '/admin';
        break;
      case 'manager':
        dashboardUrl = '/manager-dashboard';
        break;
      case 'trainer':
        dashboardUrl = '/trainer-dashboard';
        break;
      case 'member':
        dashboardUrl = '/member-dashboard';
        break;
    }

    const response = NextResponse.json({
      success: true,
      message: '–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞',
      user: {
        id: user._id,
        email: user.email,
        role: user.role,
        name: user.name
      },
      dashboardUrl
    });

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º cookies
    response.cookies.set('session_id', sessionId, {
            httpOnly: true,
      secure: process.env.NODE_ENV === 'production',
      sameSite: 'lax',
      maxAge: 7 * 24 * 60 * 60 // 7 –¥–Ω–µ–π
    });

    response.cookies.set('session_id_debug', sessionId, {
      maxAge: 7 * 24 * 60 * 60 // 7 –¥–Ω–µ–π –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    });

    return response;

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error);
    return NextResponse.json({
      success: false,
      error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
    }, { status: 500 });
  }
}

