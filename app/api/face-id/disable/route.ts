// app/api/face-id/disable/route.ts
import { NextRequest, NextResponse } from 'next/server';
import { getCurrentUser } from '@/lib/auth';

export async function POST(request: NextRequest) {
  try {
    console.log('üóëÔ∏è API: –û—Ç–∫–ª—é—á–∞–µ–º Face ID...');
    
    const user = await getCurrentUser();
    
    if (!user) {
      console.log('‚ùå API: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
      return NextResponse.json({
        success: false,
        error: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω'
      }, { status: 401 });
    }

    console.log('üë§ API: –û—Ç–∫–ª—é—á–∞–µ–º Face ID –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', { id: user.id, email: user.email });

    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–∞–ª—å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    /* 
    const deletedRecords = await db.faceId.deleteMany({
      where: { userId: user.id }
    });
    
    console.log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π Face ID: ${deletedRecords.count}`);
    */

    // –ò–º–∏—Ç–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ
    await new Promise(resolve => setTimeout(resolve, 500));

    console.log('‚úÖ API: Face ID —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', user.id);

    return NextResponse.json({
      success: true,
      message: 'Face ID —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω',
      userId: user.id
    });

  } catch (error) {
    console.error('‚ùå API: –û—à–∏–±–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è Face ID:', error);
    return NextResponse.json({
      success: false,
      error: '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫–ª—é—á–∏—Ç—å Face ID'
    }, { status: 500 });
  }
}
