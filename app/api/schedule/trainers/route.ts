// app/api/schedule/trainers/route.ts (–æ–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
import { NextRequest, NextResponse } from 'next/server';
import { ConvexHttpClient } from "convex/browser";

const convex = new ConvexHttpClient(process.env.NEXT_PUBLIC_CONVEX_URL!);

export async function GET(request: NextRequest) {
  try {
    console.log('üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ —Ç—Ä–µ–Ω–µ—Ä–æ–≤ –¥–ª—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∏–∑ Convex...');
    console.log('üîó Convex URL:', process.env.NEXT_PUBLIC_CONVEX_URL);
    
    // ‚úÖ –ü–†–û–í–ï–†–Ø–ï–ú –î–û–°–¢–£–ü–ù–û–°–¢–¨ CONVEX
    if (!process.env.NEXT_PUBLIC_CONVEX_URL) {
      console.warn('‚ö†Ô∏è NEXT_PUBLIC_CONVEX_URL –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º mock –¥–∞–Ω–Ω—ã–µ');
      return NextResponse.json(getMockScheduleTrainers());
    }

    // ‚úÖ –ü–´–¢–ê–ï–ú–°–Ø –ü–û–õ–£–ß–ò–¢–¨ –¢–†–ï–ù–ï–†–û–í –ò–ó CONVEX
    const trainersFromConvex = await convex.query("trainers:getActiveTrainers");
    
    if (trainersFromConvex && trainersFromConvex.length > 0) {
      console.log('‚úÖ –¢—Ä–µ–Ω–µ—Ä—ã –¥–ª—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ Convex:', trainersFromConvex.length);
      
      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Convex –≤ —Ñ–æ—Ä–º–∞—Ç –¥–ª—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
      const scheduleTrainers = trainersFromConvex.map((trainer: any) => ({
        trainerId: trainer._id,
        trainerName: trainer.name,
        trainerRole: trainer.role,
        events: [], // –°–æ–±—ã—Ç–∏—è –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–µ–Ω—ã –æ—Ç–¥–µ–ª—å–Ω–æ
        workingHours: trainer.workingHours || {
          start: '09:00',
          end: '18:00',
          days: [1, 2, 3, 4, 5]
        }
      }));

      return NextResponse.json(scheduleTrainers);
    } else {
      console.log('‚ö†Ô∏è –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç—Ä–µ–Ω–µ—Ä–æ–≤ –≤ Convex, –∏—Å–ø–æ–ª—å–∑—É–µ–º mock –¥–∞–Ω–Ω—ã–µ');
      return NextResponse.json(getMockScheduleTrainers());
    }

  } catch (error: any) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç—Ä–µ–Ω–µ—Ä–æ–≤ –¥–ª—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∏–∑ Convex:', error);
    
    // ‚úÖ –î–ï–¢–ê–õ–¨–ù–ê–Ø –û–ë–†–ê–ë–û–¢–ö–ê –û–®–ò–ë–û–ö
    if (error.message?.includes('Could not find public function')) {
      console.error('üí° –§—É–Ω–∫—Ü–∏—è trainers:getActiveTrainers –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ Convex');
      console.error('üí° –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ:');
      console.error('   1. –§–∞–π–ª convex/trainers.ts —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
      console.error('   2. –§—É–Ω–∫—Ü–∏—è getActiveTrainers —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞');
      console.error('   3. Convex dev —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω: npx convex dev');
    } else if (error.message?.includes('fetch')) {
      console.error('üí° –ü—Ä–æ–±–ª–µ–º–∞ —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ Convex');
      console.error('üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ NEXT_PUBLIC_CONVEX_URL –≤ .env.local');
    }
    
    console.log('üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ mock –¥–∞–Ω–Ω—ã–µ...');
    return NextResponse.json(getMockScheduleTrainers());
  }
}

// ‚úÖ –†–ê–°–®–ò–†–ï–ù–ù–´–ï MOCK –î–ê–ù–ù–´–ï
function getMockScheduleTrainers() {
  console.log('üìã –ò—Å–ø–æ–ª—å–∑—É–µ–º mock –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç—Ä–µ–Ω–µ—Ä–æ–≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è');
  
  return [
    {
      trainerId: 'trainer1',
      trainerName: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ü–µ—Ç—Ä–æ–≤',
      trainerRole: '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ç—Ä–µ–Ω–µ—Ä',
      events: [],
      workingHours: {
        start: '09:00',
        end: '18:00',
        days: [1, 2, 3, 4, 5] // –ø–Ω-–ø—Ç
      }
    },
    {
      trainerId: 'trainer2',
      trainerName: '–ú–∞—Ä–∏—è –ò–≤–∞–Ω–æ–≤–∞',
      trainerRole: '–§–∏—Ç–Ω–µ—Å-–∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä',
      events: [],
      workingHours: {
        start: '08:00',
        end: '17:00',
        days: [1, 2, 3, 4, 5, 6] // –ø–Ω-—Å–±
      }
    },
    {
      trainerId: 'trainer3',
      trainerName: '–î–º–∏—Ç—Ä–∏–π –ö–æ–∑–ª–æ–≤',
      trainerRole: '–ô–æ–≥–∞-–∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä',
      events: [],
      workingHours: {
        start: '10:00',
        end: '19:00',
        days: [1, 2, 3, 4, 5, 6, 0] // –∫–∞–∂–¥—ã–π –¥–µ–Ω—å
      }
    },
    {
      trainerId: 'trainer4',
      trainerName: '–ï–ª–µ–Ω–∞ –°–∏–¥–æ—Ä–æ–≤–∞',
      trainerRole: '–ì—Ä—É–ø–ø–æ–≤–æ–π –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä',
      events: [],
      workingHours: {
        start: '07:00',
        end: '16:00',
        days: [1, 2, 3, 4, 5, 6] // –ø–Ω-—Å–±
      }
    },
    {
      trainerId: 'trainer5',
      trainerName: '–ò–≥–æ—Ä—å –í–æ–ª–∫–æ–≤',
      trainerRole: '–¢—Ä–µ–Ω–µ—Ä –ø–æ –±–æ–∫—Å—É',
      events: [],
      workingHours: {
        start: '14:00',
        end: '22:00',
        days: [1, 2, 3, 4, 5, 6] // –ø–Ω-—Å–±
      }
    }
  ];
}
