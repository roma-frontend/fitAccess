"use client";

import { useAuth } from "@/hooks/useAuth";
import { useRoleTexts } from "@/lib/roleTexts";
import { toast } from "@/hooks/use-toast";
import { useRouter } from "next/navigation";

// –ò–º–ø–æ—Ä—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
import { WelcomeHeader } from "@/components/admin/dashboard/WelcomeHeader";
import { StatusCards } from "@/components/admin/dashboard/StatusCards";
import { PersonalizedStats } from "@/components/admin/PersonalizedStats";
import { PersonalizedProgress } from "@/components/admin/PersonalizedProgress";
import { QuickActions } from "@/components/admin/QuickActions";
import { RecentActivity } from "@/components/admin/RecentActivity";
import { RoleTips } from "@/components/admin/dashboard/RoleTips";
import { RoleSpecificWidgets } from "@/components/admin/dashboard/RoleSpecificWidgets";
import { QuickStatsWidget } from "@/components/admin/dashboard/QuickStatsWidget";
import { NotificationsWidget } from "@/components/admin/dashboard/NotificationsWidget";
import { QuickLinksWidget } from "@/components/admin/dashboard/QuickLinksWidget";
import { KeyMetrics } from "@/components/admin/dashboard/KeyMetrics";
import { WeeklyCalendar } from "@/components/admin/dashboard/WeeklyCalendar";
import { ProgressTracker } from "@/components/admin/dashboard/ProgressTracker";
import { DashboardFooter } from "@/components/admin/dashboard/DashboardFooter";
import { useState } from "react";
import { AdminDashboardSkeleton } from "@/components/admin/AdminDashboardSkeleton";

export default function AdminDashboard() {
  const { user } = useAuth();
  const userRole = user?.role;
  const roleTexts = useRoleTexts(userRole);
  const router = useRouter();
  const [isLoggingOut, setIsLoggingOut] = useState(false);

  // –ü–æ–ª—É—á–∞–µ–º –≤—Ä–µ–º—è —Å—É—Ç–æ–∫ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
  const getGreeting = () => {
    const hour = new Date().getHours();
    if (hour < 12) return "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ";
    if (hour < 17) return "–î–æ–±—Ä—ã–π –¥–µ–Ω—å";
    return "–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä";
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
  const goToHome = () => router.push("/");
  const goToProfile = () => router.push('admin/profile');
  const goToSettings = () => router.push('admin/settings');

  const handleLogout = async () => {
    setIsLoggingOut(true);
    
    try {
      console.log("üö™ –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –≤—ã—Ö–æ–¥–∞ –∏–∑ —Å–∏—Å—Ç–µ–º—ã...");
      
      const response = await fetch("/api/auth/logout", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
      });

      const data = await response.json();

      if (response.ok && data.success) {
        console.log("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã");
        
        toast({
          title: "–í—ã—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω",
          description: "–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã—à–ª–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã",
        });

        // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        setTimeout(() => {
          // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
          window.location.href = "/";
        }, 1000);
      } else {
        throw new Error(data.error || "–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –∏–∑ —Å–∏—Å—Ç–µ–º—ã");
      }
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞:", error);
      
      toast({
        variant: "destructive",
        title: "–û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞",
        description: error instanceof Error ? error.message : "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–π—Ç–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã",
      });
      
      // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤—Å–µ —Ä–∞–≤–Ω–æ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é
      setTimeout(() => {
        window.location.href = "/";
      }, 2000);
    } finally {
      setIsLoggingOut(false);
    }
  };

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω
  if (!user || !userRole) {
    return <AdminDashboardSkeleton />;
  }

  return (
    <div className="min-h-screen bg-gray-50">
      <main className="container mx-auto px-4 py-6">
        <div className="space-y-6">
          {/* –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ */}
          <WelcomeHeader
            user={user}
            roleTexts={roleTexts}
            greeting={getGreeting()}
            onHome={goToHome}
            onProfile={goToProfile}
            onSettings={goToSettings}
            onLogout={handleLogout}
          />

          {/* –ö–∞—Ä—Ç–æ—á–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ */}
          <StatusCards userRole={userRole} />

          {/* –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
          <PersonalizedStats />

          {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏ */}
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
            <QuickActions variant="expanded" />
            <PersonalizedProgress />
          </div>

          {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–µ–∫—Ü–∏–∏ */}
          <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
            <div className="lg:col-span-2">
              <RecentActivity />
            </div>
            <RoleTips userRole={userRole} />
          </div>

          {/* –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤–∏–¥–∂–µ—Ç—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏ */}
          <RoleSpecificWidgets userRole={userRole} />

          {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–∏–¥–∂–µ—Ç—ã –¥–ª—è –≤—Å–µ—Ö —Ä–æ–ª–µ–π */}
          <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
            <QuickStatsWidget userRole={userRole} />
            <NotificationsWidget userRole={userRole} />
            <QuickLinksWidget userRole={userRole} />
          </div>

          {/* –ö–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤ */}
          <KeyMetrics userRole={userRole} />

          {/* –ö–∞–ª–µ–Ω–¥–∞—Ä—å —Å–æ–±—ã—Ç–∏–π –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ */}
          <WeeklyCalendar userRole={userRole} />

          {/* –ü—Ä–æ–≥—Ä–µ—Å—Å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤ */}
          <ProgressTracker userRole={userRole} />

          {/* –§—É—Ç–µ—Ä —Å –æ–±—â–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π */}
          <DashboardFooter userRole={userRole} />
        </div>
      </main>
    </div>
  );
}
