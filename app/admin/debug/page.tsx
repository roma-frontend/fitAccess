// app/admin/debug/page.tsx
"use client";

import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { SyncDebugPanel } from '@/components/debug/SyncDebugPanel';
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { useState, useEffect } from "react";
import { DebugSystemTest } from "@/components/debug/DebugSystemTest";
import { ArrowLeft, Bug, RefreshCw } from "lucide-react";
import { useRouter } from "next/navigation";
import { AdminSecondHeader, MobileActionGroup, ResponsiveButton } from "@/components/admin/users/AdminSecondHeader";

export default function DebugPage() {
  const [systemInfo, setSystemInfo] = useState({
    contexts: 0,
    events: 0,
    notifications: 0,
    lastUpdate: null as Date | null
  });
  const router = useRouter()

  const updateSystemInfo = () => {
    if (typeof window !== 'undefined' && window.fitAccessDebug) {
      const debug = window.fitAccessDebug;
      setSystemInfo({
        contexts: Object.keys(debug).filter(key => 
          typeof debug[key] === 'object' && 
          debug[key] !== null && 
          !['help', 'sync', 'stats'].includes(key)
        ).length,
        events: debug.schedule?.events?.length || 0,
        notifications: debug.dashboard?.notifications?.length || 0,
        lastUpdate: new Date()
      });
    }
  };

  useEffect(() => {
    updateSystemInfo();
    const interval = setInterval(updateSystemInfo, 3000);
    return () => clearInterval(interval);
  }, []);

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100">
      {/* Header */}
      <AdminSecondHeader
        title="–û—Ç–ª–∞–¥–∫–∞"
        description="–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∏—Å—Ç–µ–º—ã"
        icon={Bug}
        actions={
          <MobileActionGroup>
            <div className="hidden sm:flex">
              <Badge variant="outline" className="bg-green-50 text-green-700">
                üü¢ –°–∏—Å—Ç–µ–º–∞ –∞–∫—Ç–∏–≤–Ω–∞
              </Badge>
            </div>
            
            <ResponsiveButton 
              onClick={updateSystemInfo} 
              className="bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white border-0"
            >
              <RefreshCw className="h-4 w-4" />
              <span className="sm:ml-2">–û–±–Ω–æ–≤–∏—Ç—å</span>
            </ResponsiveButton>
          </MobileActionGroup>
        }
      />

      {/* –û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ */}
      <Card className="mb-6">
        <CardHeader>
          <CardTitle className="flex items-center justify-between">
            <span>–û–±–∑–æ—Ä —Å–∏—Å—Ç–µ–º—ã</span>
            <Button onClick={updateSystemInfo} variant="outline" size="sm">
              üîÑ –û–±–Ω–æ–≤–∏—Ç—å
            </Button>
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
            <div className="text-center">
              <div className="text-2xl font-bold text-blue-600">{systemInfo.contexts}</div>
              <div className="text-sm text-gray-600">–ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–≤</div>
            </div>
            <div className="text-center">
              <div className="text-2xl font-bold text-green-600">{systemInfo.events}</div>
              <div className="text-sm text-gray-600">–°–æ–±—ã—Ç–∏–π –≤ —Å–∏—Å—Ç–µ–º–µ</div>
            </div>
            <div className="text-center">
              <div className="text-2xl font-bold text-purple-600">{systemInfo.notifications}</div>
              <div className="text-sm text-gray-600">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</div>
            </div>
            <div className="text-center">
              <div className="text-xs text-gray-500">
                {systemInfo.lastUpdate ? 
                  `–û–±–Ω–æ–≤–ª–µ–Ω–æ: ${systemInfo.lastUpdate.toLocaleTimeString()}` : 
                  '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'
                }
              </div>
              <Badge variant="outline" className="mt-1">
                üü¢ –°–∏—Å—Ç–µ–º–∞ –∞–∫—Ç–∏–≤–Ω–∞
              </Badge>
            </div>
          </div>
        </CardContent>
      </Card>

      <Tabs defaultValue="test" className="w-full">
        <TabsList className="grid w-full grid-cols-2">
          <TabsTrigger value="test" className="flex items-center gap-2">
            üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
          </TabsTrigger>
          <TabsTrigger value="sync" className="flex items-center gap-2">
            üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
          </TabsTrigger>
        </TabsList>

        <TabsContent value="test" className="space-y-6">
          <DebugSystemTest />
        </TabsContent>

        <TabsContent value="sync" className="space-y-6">
          <SyncDebugPanel />
        </TabsContent>
      </Tabs>

      {/* –ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã */}
      <Card className="mt-6">
        <CardHeader>
          <CardTitle>üöÄ –ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
            <Button 
              variant="outline" 
              onClick={() => {
                if (window.fitAccessDebug?.help) {
                  window.fitAccessDebug.help();
                  console.log('üìñ –°–ø—Ä–∞–≤–∫–∞ –≤—ã–≤–µ–¥–µ–Ω–∞ –≤ –∫–æ–Ω—Å–æ–ª—å');
                }
              }}
              className="h-auto flex-col gap-2 py-4"
            >
              <span className="text-2xl">üìñ</span>
              <span>–°–ø—Ä–∞–≤–∫–∞</span>
            </Button>
            
            <Button 
              variant="outline" 
              onClick={() => {
                if (window.fitAccessDebug?.sync) {
                  window.fitAccessDebug.sync();
                  console.log('üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–ø—É—â–µ–Ω–∞');
                }
              }}
              className="h-auto flex-col gap-2 py-4"
            >
              <span className="text-2xl">üîÑ</span>
              <span>–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è</span>
            </Button>
            
            <Button 
              variant="outline" 
              onClick={() => {
                if (window.fitAccessDebug?.clear) {
                  window.fitAccessDebug.clear();
                  console.log('üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞');
                  updateSystemInfo();
                }
              }}
              className="h-auto flex-col gap-2 py-4"
            >
              <span className="text-2xl">üóëÔ∏è</span>
              <span>–û—á–∏—Å—Ç–∏—Ç—å</span>
            </Button>
            
            <Button 
              variant="outline" 
              onClick={() => {
                if (window.fitAccessDebug?.test) {
                  window.fitAccessDebug.test();
                  console.log('üß™ –¢–µ—Å—Ç –∑–∞–ø—É—â–µ–Ω');
                }
              }}
              className="h-auto flex-col gap-2 py-4"
            >
              <span className="text-2xl">üß™</span>
              <span>–¢–µ—Å—Ç</span>
            </Button>
          </div>
        </CardContent>
      </Card>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ */}
      <Card className="mt-6">
        <CardHeader>
          <CardTitle>üíª –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="bg-gray-50 rounded-lg p-4 font-mono text-sm">
            <div className="mb-2"><strong>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –≤ –∫–æ–Ω—Å–æ–ª–∏:</strong></div>
            <div className="space-y-1 text-gray-700">
              <div>‚Ä¢ <code>window.fitAccessDebug.help()</code> - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É</div>
              <div>‚Ä¢ <code>window.fitAccessDebug.stats()</code> - –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É</div>
              <div>‚Ä¢ <code>window.fitAccessDebug.sync()</code> - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é</div>
              <div>‚Ä¢ <code>window.fitAccessDebug.test()</code> - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã</div>
              <div>‚Ä¢ <code>window.diagnoseContexts()</code> - –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–≤</div>
              <div>‚Ä¢ <code>window.forceRegisterContexts()</code> - –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</div>
            </div>
            <div className="mt-3 pt-3 border-t border-gray-300">
              <div><strong>–ö–æ–Ω—Ç–µ–∫—Å—Ç—ã:</strong></div>
              <div className="text-gray-700">
                <div>‚Ä¢ <code>window.fitAccessDebug.schedule</code> - –ö–æ–Ω—Ç–µ–∫—Å—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è</div>
                <div>‚Ä¢ <code>window.fitAccessDebug.dashboard</code> - –ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–∞—à–±–æ—Ä–¥–∞</div>
                <div>‚Ä¢ <code>window.fitAccessDebug.superAdmin</code> - –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å—É–ø–µ—Ä –∞–¥–º–∏–Ω–∞</div>
              </div>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  );
}
