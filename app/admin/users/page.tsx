// app/admin/users/page.tsx (–æ–±–Ω–æ–≤–∏—Ç–µ –∏–º–ø–æ—Ä—Ç—ã –∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–∏—Å—Ç–µ–º—É —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π)

"use client";

import { useEffect, useState, useMemo } from 'react';
import { Button } from "@/components/ui/button";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Users, BarChart3, Zap, Sparkles } from "lucide-react";

// –ò–º–ø–æ—Ä—Ç —Ç–∏–ø–æ–≤
import { User, UserRole, CreateUserData, UpdateUserData } from "@/types/user";

// –ò–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
import { 
  canCreateUsers, 
  canUpdateUsers, 
  canDeleteUsers,
  canManageUser,
  getCreatableRoles 
} from "@/lib/permissions";

// –ò–º–ø–æ—Ä—Ç –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
import { UserStats } from "@/components/admin/users/UserStats";
import { UserFilters } from "@/components/admin/users/UserFilters";
import { UserGrid } from "@/components/admin/users/UserGrid";
import { CreateUserDialog } from "@/components/admin/users/CreateUserDialog";
import { RoleHierarchy } from "@/components/admin/users/RoleHierarchy";
import { QuickActions } from "@/components/admin/users/QuickActions";
import { UserAnalytics } from "@/components/admin/users/UserAnalytics";
import { useRouter } from 'next/navigation';
import { AdminSecondHeader, MobileActionGroup } from '@/components/admin/users/AdminSecondHeader';

export default function UsersManagementPage() {
  // State
  const [users, setUsers] = useState<User[]>([]);
  const [loading, setLoading] = useState(true);
  const [userRole, setUserRole] = useState<UserRole>('member');
  const [editingUser, setEditingUser] = useState<User | null>(null);
  const [showCreateDialog, setShowCreateDialog] = useState(false);
  const router = useRouter();

  // Filters
  const [searchTerm, setSearchTerm] = useState('');
  const [roleFilter, setRoleFilter] = useState<UserRole | 'all'>('all');
  const [statusFilter, setStatusFilter] = useState<'all' | 'active' | 'inactive'>('all');

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
  const canCreate = canCreateUsers(userRole);
  const canUpdate = canUpdateUsers(userRole);
  const canDelete = canDeleteUsers(userRole);

  // Load users
  useEffect(() => {
    loadUsers();
  }, []);


  


  useEffect(() => {
  const checkAuthAndLoadUsers = async () => {
    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    try {
      console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é...');
      const authResponse = await fetch('/api/auth/me', {
        credentials: 'include'
      });
      
      if (!authResponse.ok) {
        console.log('‚ùå –ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –ª–æ–≥–∏–Ω');
        router.push('/login');
        return;
      }
      
      const authData = await authResponse.json();
      console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∫–∞–∫:', authData.user);
      setUserRole(authData.user.role);
      
      // –¢–µ–ø–µ—Ä—å –∑–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      await loadUsers();
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error);
      router.push('/login');
    }
  };

  checkAuthAndLoadUsers();
}, []);




  const loadUsers = async () => {
    try {
      const response = await fetch('/api/admin/users');
      const data = await response.json();
      
      if (data.success) {
        setUsers(data.users);
        setUserRole(data.userRole);
      } else {
        alert('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ' + data.error);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', error);
      alert('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
    } finally {
      setLoading(false);
    }
  };

  // Filter users
  const filteredUsers = useMemo(() => {
    return users.filter(user => {
      const matchesSearch = !searchTerm || 
        user.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
        user.email.toLowerCase().includes(searchTerm.toLowerCase());
      
      const matchesRole = roleFilter === 'all' || user.role === roleFilter;
      
      const matchesStatus = statusFilter === 'all' || 
        (statusFilter === 'active' && user.isActive) ||
        (statusFilter === 'inactive' && !user.isActive);

      return matchesSearch && matchesRole && matchesStatus;
    });
  }, [users, searchTerm, roleFilter, statusFilter]);

  // Handlers
  const handleCreateUser = async (userData: CreateUserData): Promise<{ success: boolean; error?: string }> => {
    try {
      const response = await fetch('/api/admin/users', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(userData)
      });
      
      const data = await response.json();
      
      if (data.success) {
        await loadUsers();
        return { success: true };
      } else {
        return { success: false, error: data.error || '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è' };
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
      return { success: false, error: '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è' };
    }
  };

const handleUserUpdate = async (userData: CreateUserData): Promise<{ success: boolean; error?: string }> => {
  console.log('üîÑ handleUserUpdate: –ù–ê–ß–ê–õ–û –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è');
  console.log('üë§ –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', editingUser);
  
  if (!editingUser) {
    console.log('‚ùå –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return { success: false, error: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω' };
  }

  try {
    const updateData: UpdateUserData = {
      name: userData.name,
      email: userData.email,
      role: userData.role,
      isActive: userData.isActive,
      photoUrl: userData.photoUrl
    };

    if (userData.password && userData.password.trim()) {
      updateData.password = userData.password;
    }

    console.log('üìù –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', updateData);
    console.log('üéØ URL –∑–∞–ø—Ä–æ—Å–∞:', `/api/admin/users/${editingUser.id}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—É–∫–∏ –ø–µ—Ä–µ–¥ –∑–∞–ø—Ä–æ—Å–æ–º
    console.log('üç™ –í–°–ï –∫—É–∫–∏ –ø–µ—Ä–µ–¥ PUT –∑–∞–ø—Ä–æ—Å–æ–º:', document.cookie);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ session_id
    const sessionIdCookie = document.cookie
      .split('; ')
      .find(row => row.startsWith('session_id='));
    console.log('üîë Session ID cookie –Ω–∞–π–¥–µ–Ω:', !!sessionIdCookie);
    if (sessionIdCookie) {
      const sessionId = sessionIdCookie.split('=')[1];
      console.log('üîë Session ID –∑–Ω–∞—á–µ–Ω–∏–µ:', sessionId.substring(0, 20) + '...');
    }
    
    // –¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä–∏–º debug cookie
    const debugCookie = document.cookie
      .split('; ')
      .find(row => row.startsWith('session_id_debug='));
    console.log('üêõ Debug cookie –Ω–∞–π–¥–µ–Ω:', !!debugCookie);
    
    console.log('üì° –û—Ç–ø—Ä–∞–≤–ª—è–µ–º PUT –∑–∞–ø—Ä–æ—Å...');
    
    const response = await fetch(`/api/admin/users/${editingUser.id}`, {
      method: 'PUT',
      headers: { 
        'Content-Type': 'application/json',
      },
      credentials: 'include', // –í–∞–∂–Ω–æ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –∫—É–∫–∏
      body: JSON.stringify(updateData)
    });
    
    console.log('üì° –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ PUT:', response.status);
    console.log('üì° –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞ PUT:', Object.fromEntries(response.headers.entries()));
    
    const data = await response.json();
    console.log('üìÑ –î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞ PUT:', data);
    
    if (data.success) {
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ');
      await loadUsers();
      return { success: true };
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –æ—Ç API:', data.error);
      return { success: false, error: data.error || '–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è' };
    }
  } catch (error) {
    console.error('‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –≤ handleUserUpdate:', error);
    return { success: false, error: '–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è' };
  }
};

const handleCreateOrUpdate = async (userData: CreateUserData): Promise<{ success: boolean; error?: string }> => {
  console.log('üîÄ handleCreateOrUpdate: –æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏');
  console.log('üìù –î–∞–Ω–Ω—ã–µ:', userData);
  console.log('üë§ editingUser:', editingUser?.name || 'null');
  
  if (editingUser) {
    console.log('‚úèÔ∏è –†–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
    return await handleUserUpdate(userData);
  } else {
    console.log('‚ûï –†–µ–∂–∏–º —Å–æ–∑–¥–∞–Ω–∏—è');
    return await handleCreateUser(userData);
  }
};
  
  const handleDeleteUser = async (id: string, userName: string): Promise<void> => {
    if (!confirm(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userName}?`)) {
      return;
    }
  
    try {
      const response = await fetch(`/api/admin/users/${id}`, {
        method: 'DELETE'
      });
      
      const data = await response.json();
      
      if (data.success) {
        alert('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
        await loadUsers();
      } else {
        alert('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ' + data.error);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
      alert('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    }
  };
  
  const handleBulkAction = async (action: string, userIds: string[]): Promise<void> => {
    if (userIds.length === 0) {
      alert('–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏');
      return;
    }
  
    let confirmMessage = '';
    switch (action) {
      case 'activate':
        confirmMessage = `–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å ${userIds.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π?`;
        break;
      case 'deactivate':
        confirmMessage = `–î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å ${userIds.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π?`;
        break;
      case 'delete':
        confirmMessage = `–£–î–ê–õ–ò–¢–¨ ${userIds.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!`;
        break;
      case 'export':
        const csvData = users
          .filter(user => userIds.includes(user.id))
          .map(user => ({
            name: user.name,
            email: user.email,
            role: user.role,
            status: user.isActive ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω',
            created: new Date(user.createdAt).toLocaleDateString()
          }));
        
        const csv = [
          ['–ò–º—è', 'Email', '–†–æ–ª—å', '–°—Ç–∞—Ç—É—Å', '–°–æ–∑–¥–∞–Ω'],
          ...csvData.map(row => Object.values(row))
        ].map(row => row.join(',')).join('\n');
        
        const blob = new Blob([csv], { type: 'text/csv' });
        const url = window.URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = `users_${new Date().toISOString().split('T')[0]}.csv`;
        a.click();
        return;
      default:
        alert('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ');
        return;
    }
  
    if (!confirm(confirmMessage)) return;
  
    try {
      const response = await fetch('/api/admin/users/bulk', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ action, userIds })
      });
      
      const data = await response.json();
      
      if (data.success) {
        alert(data.message);
        await loadUsers();
      } else {
        alert('–û—à–∏–±–∫–∞: ' + data.error);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –º–∞—Å—Å–æ–≤–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏:', error);
      alert('–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏');
    }
  };

  const handleToggleStatus = async (id: string, isActive: boolean): Promise<void> => {
    try {
      const updateData: UpdateUserData = { isActive };
      
      const response = await fetch(`/api/admin/users/${id}`, {
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(updateData)
      });
      
      const data = await response.json();
      
      if (data.success) {
        await loadUsers();
      } else {
        alert('–û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: ' + data.error);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞:', error);
      alert('–û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞');
    }
  };

  if (loading) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100">
        <div className="text-center space-y-4">
          <div className="relative">
            <div className="w-16 h-16 border-4 border-blue-200 border-t-blue-600 rounded-full animate-spin mx-auto"></div>
            <Sparkles className="w-6 h-6 text-blue-500 absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2" />
          </div>
          <div className="space-y-2">
            <h3 className="text-lg font-semibold text-gray-700">–ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</h3>
            <p className="text-gray-500">–ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤–∞—Å...</p>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100">
      {/* Animated Background Elements */}
      <div className="fixed inset-0 overflow-hidden pointer-events-none">
        <div className="absolute -top-40 -right-40 w-80 h-80 bg-gradient-to-br from-blue-400/20 to-purple-600/20 rounded-full blur-3xl animate-pulse"></div>
        <div className="absolute -bottom-40 -left-40 w-80 h-80 bg-gradient-to-br from-indigo-400/20 to-pink-600/20 rounded-full blur-3xl animate-pulse delay-1000"></div>
      </div>

      {/* Header */}
      <AdminSecondHeader
        title="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"
        icon={Users}
        actions={
          canCreate ? (
            <MobileActionGroup>
              <Button 
                onClick={() => {
                  setEditingUser(null);
                  setShowCreateDialog(true);
                }}
                className="bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white shadow-lg"
              >
                <Users className="h-4 w-4 mr-2" />
                –°–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
              </Button>
            </MobileActionGroup>
          ) : undefined
        }
      />

      {/* Main Content */}
      <main className="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {/* Stats */}
        <div className="mb-8">
          <UserStats users={users} />
        </div>

        {/* Tabs */}
        <Tabs defaultValue="users" className="space-y-8">
          <div className="bg-white/60 backdrop-blur-sm rounded-2xl p-2 shadow-lg border border-white/20">
            <TabsList className="grid w-full grid-cols-4 bg-transparent gap-2">
              <TabsTrigger 
                value="users" 
                className="flex items-center gap-2 data-[state=active]:bg-white data-[state=active]:shadow-md data-[state=active]:text-blue-600 transition-all duration-200"
              >
                <Users className="h-4 w-4" />
                <span className="hidden sm:inline">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</span>
              </TabsTrigger>
              <TabsTrigger 
                value="analytics" 
                className="flex items-center gap-2 data-[state=active]:bg-white data-[state=active]:shadow-md data-[state=active]:text-blue-600 transition-all duration-200"
              >
                <BarChart3 className="h-4 w-4" />
                <span className="hidden sm:inline">–ê–Ω–∞–ª–∏—Ç–∏–∫–∞</span>
              </TabsTrigger>
              <TabsTrigger 
                value="actions" 
                className="flex items-center gap-2 data-[state=active]:bg-white data-[state=active]:shadow-md data-[state=active]:text-blue-600 transition-all duration-200"
              >
                <Zap className="h-4 w-4" />
                <span className="hidden sm:inline">–î–µ–π—Å—Ç–≤–∏—è</span>
              </TabsTrigger>
              <TabsTrigger 
                value="hierarchy" 
                className="flex items-center gap-2 data-[state=active]:bg-white data-[state=active]:shadow-md data-[state=active]:text-blue-600 transition-all duration-200"
              >
                <Sparkles className="h-4 w-4" />
                <span className="hidden sm:inline">–†–æ–ª–∏</span>
              </TabsTrigger>
            </TabsList>
          </div>

          {/* Users Tab */}
          <TabsContent value="users" className="space-y-8">
            <UserFilters
              searchTerm={searchTerm}
              onSearchChange={setSearchTerm}
              roleFilter={roleFilter}
              onRoleFilterChange={setRoleFilter}
              statusFilter={statusFilter}
              onStatusFilterChange={setStatusFilter}
              totalUsers={users.length}
              filteredUsers={filteredUsers.length}
            />

            <UserGrid
              users={filteredUsers}
              currentUserRole={userRole}
              onEdit={(user) => {
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ—Ç –ª–∏ —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                if (canManageUser(userRole, user.role)) {
                  setEditingUser(user);
                  setShowCreateDialog(true);
                } else {
                  alert('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
                }
              }}
              onDelete={handleDeleteUser}
              onToggleStatus={handleToggleStatus}
            />
          </TabsContent>

          {/* Analytics Tab */}
          <TabsContent value="analytics" className="space-y-8">
            <UserAnalytics users={users} />
          </TabsContent>

          {/* Quick Actions Tab */}
          <TabsContent value="actions" className="space-y-8">
            <QuickActions
              users={users}
              userRole={userRole}
              onBulkAction={handleBulkAction}
            />
          </TabsContent>

          {/* Role Hierarchy Tab */}
          <TabsContent value="hierarchy" className="space-y-8">
            <RoleHierarchy />
          </TabsContent>
        </Tabs>
      </main>

      {/* Create/Edit Dialog */}
      <CreateUserDialog
        open={showCreateDialog}
        setOpen={setShowCreateDialog}
        onCreateUser={handleCreateOrUpdate}
        editingUser={editingUser}
        currentUserRole={userRole}
      />
    </div>
  );
}
